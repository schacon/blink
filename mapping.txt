android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.v4.util.LruCache -> android.support.a.a.a:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
com.activeandroid.ActiveAndroid -> com.activeandroid.ActiveAndroid:
    void initialize(android.content.Context) -> initialize
    void initialize(com.activeandroid.Configuration) -> initialize
    void initialize(android.content.Context,boolean) -> initialize
    void initialize(com.activeandroid.Configuration,boolean) -> initialize
    void clearCache() -> clearCache
    void dispose() -> dispose
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    void beginTransaction() -> beginTransaction
    void endTransaction() -> endTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    boolean inTransaction() -> inTransaction
    void execSQL(java.lang.String) -> execSQL
    void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
com.activeandroid.Cache -> com.activeandroid.Cache:
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    android.content.Context sContext -> sContext
    com.activeandroid.ModelInfo sModelInfo -> sModelInfo
    com.activeandroid.DatabaseHelper sDatabaseHelper -> sDatabaseHelper
    android.support.v4.util.LruCache sEntities -> sEntities
    boolean sIsInitialized -> sIsInitialized
    void initialize(com.activeandroid.Configuration) -> initialize
    void clear() -> clear
    void dispose() -> dispose
    boolean isInitialized() -> isInitialized
    android.database.sqlite.SQLiteDatabase openDatabase() -> openDatabase
    void closeDatabase() -> closeDatabase
    android.content.Context getContext() -> getContext
    java.lang.String getIdentifier(java.lang.Class,java.lang.Long) -> getIdentifier
    java.lang.String getIdentifier(com.activeandroid.Model) -> getIdentifier
    void addEntity(com.activeandroid.Model) -> addEntity
    com.activeandroid.Model getEntity(java.lang.Class,long) -> getEntity
    void removeEntity(com.activeandroid.Model) -> removeEntity
    java.util.Collection getTableInfos() -> getTableInfos
    com.activeandroid.TableInfo getTableInfo(java.lang.Class) -> getTableInfo
    com.activeandroid.serializer.TypeSerializer getParserForType(java.lang.Class) -> getParserForType
    java.lang.String getTableName(java.lang.Class) -> getTableName
com.activeandroid.Configuration -> com.activeandroid.Configuration:
    java.lang.String SQL_PARSER_LEGACY -> SQL_PARSER_LEGACY
    java.lang.String SQL_PARSER_DELIMITED -> SQL_PARSER_DELIMITED
    android.content.Context mContext -> mContext
    java.lang.String mDatabaseName -> mDatabaseName
    int mDatabaseVersion -> mDatabaseVersion
    java.lang.String mSqlParser -> mSqlParser
    java.util.List mModelClasses -> mModelClasses
    java.util.List mTypeSerializers -> mTypeSerializers
    int mCacheSize -> mCacheSize
    android.content.Context getContext() -> getContext
    java.lang.String getDatabaseName() -> getDatabaseName
    java.lang.String getDatabasePath() -> getDatabasePath
    int getDatabaseVersion() -> getDatabaseVersion
    java.lang.String getSqlParser() -> getSqlParser
    java.util.List getModelClasses() -> getModelClasses
    java.util.List getTypeSerializers() -> getTypeSerializers
    int getCacheSize() -> getCacheSize
    boolean isValid() -> isValid
    void access$1(com.activeandroid.Configuration,int) -> access$1
    void access$2(com.activeandroid.Configuration,java.lang.String) -> access$2
    void access$3(com.activeandroid.Configuration,int) -> access$3
    void access$4(com.activeandroid.Configuration,java.lang.String) -> access$4
    void access$5(com.activeandroid.Configuration,java.util.List) -> access$5
    void access$6(com.activeandroid.Configuration,java.util.List) -> access$6
com.activeandroid.Configuration$Builder -> com.activeandroid.Configuration$Builder:
    java.lang.String AA_DB_NAME -> AA_DB_NAME
    java.lang.String AA_DB_VERSION -> AA_DB_VERSION
    java.lang.String AA_MODELS -> AA_MODELS
    java.lang.String AA_SERIALIZERS -> AA_SERIALIZERS
    java.lang.String AA_SQL_PARSER -> AA_SQL_PARSER
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    java.lang.String DEFAULT_DB_NAME -> DEFAULT_DB_NAME
    java.lang.String DEFAULT_SQL_PARSER -> DEFAULT_SQL_PARSER
    android.content.Context mContext -> mContext
    java.lang.Integer mCacheSize -> mCacheSize
    java.lang.String mDatabaseName -> mDatabaseName
    java.lang.Integer mDatabaseVersion -> mDatabaseVersion
    java.lang.String mSqlParser -> mSqlParser
    java.util.List mModelClasses -> mModelClasses
    java.util.List mTypeSerializers -> mTypeSerializers
    com.activeandroid.Configuration$Builder setCacheSize(int) -> setCacheSize
    com.activeandroid.Configuration$Builder setDatabaseName(java.lang.String) -> setDatabaseName
    com.activeandroid.Configuration$Builder setDatabaseVersion(int) -> setDatabaseVersion
    com.activeandroid.Configuration$Builder setSqlParser(java.lang.String) -> setSqlParser
    com.activeandroid.Configuration$Builder addModelClass(java.lang.Class) -> addModelClass
    com.activeandroid.Configuration$Builder addModelClasses(java.lang.Class[]) -> addModelClasses
    com.activeandroid.Configuration$Builder setModelClasses(java.lang.Class[]) -> setModelClasses
    com.activeandroid.Configuration$Builder addTypeSerializer(java.lang.Class) -> addTypeSerializer
    com.activeandroid.Configuration$Builder addTypeSerializers(java.lang.Class[]) -> addTypeSerializers
    com.activeandroid.Configuration$Builder setTypeSerializers(java.lang.Class[]) -> setTypeSerializers
    com.activeandroid.Configuration create() -> create
    java.lang.String getMetaDataDatabaseNameOrDefault() -> getMetaDataDatabaseNameOrDefault
    int getMetaDataDatabaseVersionOrDefault() -> getMetaDataDatabaseVersionOrDefault
    java.lang.String getMetaDataSqlParserOrDefault() -> getMetaDataSqlParserOrDefault
    java.util.List loadModelList(java.lang.String[]) -> loadModelList
    java.util.List loadSerializerList(java.lang.String[]) -> loadSerializerList
com.activeandroid.DatabaseHelper -> com.activeandroid.DatabaseHelper:
    java.lang.String tag -> tag
    java.lang.String MIGRATION_PATH -> MIGRATION_PATH
    java.lang.String mSqlParser -> mSqlParser
    com.activeandroid.Configuration mConfiguration -> mConfiguration
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void copyAttachedDatabase(android.content.Context,java.lang.String) -> copyAttachedDatabase
    void executePragmas(android.database.sqlite.SQLiteDatabase) -> executePragmas
    void executeCreateIndex(android.database.sqlite.SQLiteDatabase) -> executeCreateIndex
    void executeCreate(android.database.sqlite.SQLiteDatabase) -> executeCreate
    boolean executeMigrations(android.database.sqlite.SQLiteDatabase,int,int) -> executeMigrations
    void executeSqlScript(android.database.sqlite.SQLiteDatabase,java.lang.String) -> executeSqlScript
    void executeDelimitedSqlScript(android.database.sqlite.SQLiteDatabase,java.io.InputStream) -> executeDelimitedSqlScript
    void executeLegacySqlScript(android.database.sqlite.SQLiteDatabase,java.io.InputStream) -> executeLegacySqlScript
com.activeandroid.Model -> com.activeandroid.Model:
    java.lang.String tag -> tag
    int HASH_PRIME -> HASH_PRIME
    java.lang.Long mId -> mId
    com.activeandroid.TableInfo mTableInfo -> mTableInfo
    java.lang.String idName -> idName
    java.lang.Long getId() -> getId
    void setmId(java.lang.Long) -> setmId
    void delete() -> delete
    java.lang.Long save() -> save
    void delete(java.lang.Class,long) -> delete
    com.activeandroid.Model load(java.lang.Class,long) -> load
    void loadFromCursor(android.database.Cursor) -> loadFromCursor
    java.util.List getMany(java.lang.Class,java.lang.String) -> getMany
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.activeandroid.ModelInfo -> com.activeandroid.ModelInfo:
    java.util.Map mTableInfos -> mTableInfos
    java.util.Map mTypeSerializers -> mTypeSerializers
    java.util.Collection getTableInfos() -> getTableInfos
    com.activeandroid.TableInfo getTableInfo(java.lang.Class) -> getTableInfo
    com.activeandroid.serializer.TypeSerializer getTypeSerializer(java.lang.Class) -> getTypeSerializer
    boolean loadModelFromMetaData(com.activeandroid.Configuration) -> loadModelFromMetaData
    void scanForModel(android.content.Context) -> scanForModel
    void scanForModelClasses(java.io.File,java.lang.String,java.lang.ClassLoader) -> scanForModelClasses
com.activeandroid.ModelInfo$1 -> com.activeandroid.ModelInfo$1:
    com.activeandroid.ModelInfo this$0 -> this$0
com.activeandroid.R -> com.activeandroid.R:
com.activeandroid.R$drawable -> com.activeandroid.R$drawable:
    int ic_launcher -> ic_launcher
com.activeandroid.R$string -> com.activeandroid.R$string:
    int app_name -> app_name
com.activeandroid.R$style -> com.activeandroid.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.activeandroid.TableInfo -> com.activeandroid.TableInfo:
    java.lang.Class mType -> mType
    java.lang.String mTableName -> mTableName
    java.lang.String mIdName -> mIdName
    java.util.Map mColumnNames -> mColumnNames
    java.lang.Class getType() -> getType
    java.lang.String getTableName() -> getTableName
    java.lang.String getIdName() -> getIdName
    java.util.Collection getFields() -> getFields
    java.lang.String getColumnName(java.lang.reflect.Field) -> getColumnName
    java.lang.reflect.Field getIdField(java.lang.Class) -> getIdField
com.activeandroid.annotation.Column -> com.activeandroid.annotation.Column:
    java.lang.String name() -> name
    int length() -> length
    boolean notNull() -> notNull
    com.activeandroid.annotation.Column$ConflictAction onNullConflict() -> onNullConflict
    com.activeandroid.annotation.Column$ForeignKeyAction onDelete() -> onDelete
    com.activeandroid.annotation.Column$ForeignKeyAction onUpdate() -> onUpdate
    boolean unique() -> unique
    com.activeandroid.annotation.Column$ConflictAction onUniqueConflict() -> onUniqueConflict
    java.lang.String[] uniqueGroups() -> uniqueGroups
    com.activeandroid.annotation.Column$ConflictAction[] onUniqueConflicts() -> onUniqueConflicts
    boolean index() -> index
    java.lang.String[] indexGroups() -> indexGroups
com.activeandroid.annotation.Column$ConflictAction -> com.activeandroid.annotation.Column$ConflictAction:
    com.activeandroid.annotation.Column$ConflictAction ROLLBACK -> ROLLBACK
    com.activeandroid.annotation.Column$ConflictAction ABORT -> ABORT
    com.activeandroid.annotation.Column$ConflictAction FAIL -> FAIL
    com.activeandroid.annotation.Column$ConflictAction IGNORE -> IGNORE
    com.activeandroid.annotation.Column$ConflictAction REPLACE -> REPLACE
    com.activeandroid.annotation.Column$ConflictAction[] ENUM$VALUES -> ENUM$VALUES
    com.activeandroid.annotation.Column$ConflictAction[] values() -> values
    com.activeandroid.annotation.Column$ConflictAction valueOf(java.lang.String) -> valueOf
com.activeandroid.annotation.Column$ForeignKeyAction -> com.activeandroid.annotation.Column$ForeignKeyAction:
    com.activeandroid.annotation.Column$ForeignKeyAction SET_NULL -> SET_NULL
    com.activeandroid.annotation.Column$ForeignKeyAction SET_DEFAULT -> SET_DEFAULT
    com.activeandroid.annotation.Column$ForeignKeyAction CASCADE -> CASCADE
    com.activeandroid.annotation.Column$ForeignKeyAction RESTRICT -> RESTRICT
    com.activeandroid.annotation.Column$ForeignKeyAction NO_ACTION -> NO_ACTION
    com.activeandroid.annotation.Column$ForeignKeyAction[] ENUM$VALUES -> ENUM$VALUES
    com.activeandroid.annotation.Column$ForeignKeyAction[] values() -> values
    com.activeandroid.annotation.Column$ForeignKeyAction valueOf(java.lang.String) -> valueOf
com.activeandroid.annotation.Table -> com.activeandroid.annotation.Table:
    java.lang.String DEFAULT_ID_NAME -> DEFAULT_ID_NAME
    java.lang.String name() -> name
    java.lang.String id() -> id
com.activeandroid.app.Application -> com.activeandroid.app.Application:
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.activeandroid.content.ContentProvider -> com.activeandroid.content.ContentProvider:
    android.content.UriMatcher URI_MATCHER -> URI_MATCHER
    android.util.SparseArray TYPE_CODES -> TYPE_CODES
    java.lang.String sAuthority -> sAuthority
    android.util.SparseArray sMimeTypeCache -> sMimeTypeCache
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri createUri(java.lang.Class,java.lang.Long) -> createUri
    java.lang.String getAuthority() -> getAuthority
    com.activeandroid.Configuration getConfiguration() -> getConfiguration
    java.lang.Class getModelType(android.net.Uri) -> getModelType
    void notifyChange(android.net.Uri) -> notifyChange
com.activeandroid.query.Delete -> com.activeandroid.query.Delete:
    com.activeandroid.query.From from(java.lang.Class) -> from
    java.lang.String toSql() -> toSql
com.activeandroid.query.From -> com.activeandroid.query.From:
    com.activeandroid.query.Sqlable mQueryBase -> mQueryBase
    java.lang.Class mType -> mType
    java.lang.String mAlias -> mAlias
    java.util.List mJoins -> mJoins
    java.lang.StringBuilder mWhere -> mWhere
    java.lang.String mGroupBy -> mGroupBy
    java.lang.String mHaving -> mHaving
    java.lang.String mOrderBy -> mOrderBy
    java.lang.String mLimit -> mLimit
    java.lang.String mOffset -> mOffset
    java.util.List mArguments -> mArguments
    com.activeandroid.query.From as(java.lang.String) -> as
    com.activeandroid.query.Join join(java.lang.Class) -> join
    com.activeandroid.query.Join leftJoin(java.lang.Class) -> leftJoin
    com.activeandroid.query.Join outerJoin(java.lang.Class) -> outerJoin
    com.activeandroid.query.Join innerJoin(java.lang.Class) -> innerJoin
    com.activeandroid.query.Join crossJoin(java.lang.Class) -> crossJoin
    com.activeandroid.query.From where(java.lang.String) -> where
    com.activeandroid.query.From where(java.lang.String,java.lang.Object[]) -> where
    com.activeandroid.query.From and(java.lang.String) -> and
    com.activeandroid.query.From and(java.lang.String,java.lang.Object[]) -> and
    com.activeandroid.query.From or(java.lang.String) -> or
    com.activeandroid.query.From or(java.lang.String,java.lang.Object[]) -> or
    com.activeandroid.query.From groupBy(java.lang.String) -> groupBy
    com.activeandroid.query.From having(java.lang.String) -> having
    com.activeandroid.query.From orderBy(java.lang.String) -> orderBy
    com.activeandroid.query.From limit(int) -> limit
    com.activeandroid.query.From limit(java.lang.String) -> limit
    com.activeandroid.query.From offset(int) -> offset
    com.activeandroid.query.From offset(java.lang.String) -> offset
    void addArguments(java.lang.Object[]) -> addArguments
    void addFrom(java.lang.StringBuilder) -> addFrom
    void addJoins(java.lang.StringBuilder) -> addJoins
    void addWhere(java.lang.StringBuilder) -> addWhere
    void addGroupBy(java.lang.StringBuilder) -> addGroupBy
    void addHaving(java.lang.StringBuilder) -> addHaving
    void addOrderBy(java.lang.StringBuilder) -> addOrderBy
    void addLimit(java.lang.StringBuilder) -> addLimit
    void addOffset(java.lang.StringBuilder) -> addOffset
    java.lang.String sqlString(java.lang.StringBuilder) -> sqlString
    java.lang.String toSql() -> toSql
    java.lang.String toExistsSql() -> toExistsSql
    java.lang.String toCountSql() -> toCountSql
    java.util.List execute() -> execute
    com.activeandroid.Model executeSingle() -> executeSingle
    boolean exists() -> exists
    int count() -> count
    java.lang.String[] getArguments() -> getArguments
com.activeandroid.query.Join -> com.activeandroid.query.Join:
    com.activeandroid.query.From mFrom -> mFrom
    java.lang.Class mType -> mType
    java.lang.String mAlias -> mAlias
    com.activeandroid.query.Join$JoinType mJoinType -> mJoinType
    java.lang.String mOn -> mOn
    java.lang.String[] mUsing -> mUsing
    com.activeandroid.query.Join as(java.lang.String) -> as
    com.activeandroid.query.From on(java.lang.String) -> on
    com.activeandroid.query.From on(java.lang.String,java.lang.Object[]) -> on
    com.activeandroid.query.From using(java.lang.String[]) -> using
    java.lang.String toSql() -> toSql
com.activeandroid.query.Join$JoinType -> com.activeandroid.query.Join$JoinType:
    com.activeandroid.query.Join$JoinType LEFT -> LEFT
    com.activeandroid.query.Join$JoinType OUTER -> OUTER
    com.activeandroid.query.Join$JoinType INNER -> INNER
    com.activeandroid.query.Join$JoinType CROSS -> CROSS
    com.activeandroid.query.Join$JoinType[] ENUM$VALUES -> ENUM$VALUES
    com.activeandroid.query.Join$JoinType[] values() -> values
    com.activeandroid.query.Join$JoinType valueOf(java.lang.String) -> valueOf
com.activeandroid.query.Select -> com.activeandroid.query.Select:
    java.lang.String[] mColumns -> mColumns
    boolean mDistinct -> mDistinct
    boolean mAll -> mAll
    com.activeandroid.query.Select distinct() -> distinct
    com.activeandroid.query.Select all() -> all
    com.activeandroid.query.From from(java.lang.Class) -> from
    java.lang.String toSql() -> toSql
com.activeandroid.query.Select$Column -> com.activeandroid.query.Select$Column:
    java.lang.String name -> name
    java.lang.String alias -> alias
com.activeandroid.query.Set -> com.activeandroid.query.Set:
    com.activeandroid.query.Update mUpdate -> mUpdate
    java.lang.String mSet -> mSet
    java.lang.String mWhere -> mWhere
    java.util.List mSetArguments -> mSetArguments
    java.util.List mWhereArguments -> mWhereArguments
    com.activeandroid.query.Set where(java.lang.String) -> where
    com.activeandroid.query.Set where(java.lang.String,java.lang.Object[]) -> where
    java.lang.String toSql() -> toSql
    void execute() -> execute
    java.lang.String[] getArguments() -> getArguments
com.activeandroid.query.Sqlable -> com.activeandroid.query.Sqlable:
    java.lang.String toSql() -> toSql
com.activeandroid.query.Update -> com.activeandroid.query.Update:
    java.lang.Class mType -> mType
    com.activeandroid.query.Set set(java.lang.String) -> set
    com.activeandroid.query.Set set(java.lang.String,java.lang.Object[]) -> set
    java.lang.Class getType() -> getType
    java.lang.String toSql() -> toSql
com.activeandroid.serializer.ArrayFloatSerializer -> com.activeandroid.serializer.ArrayFloatSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    float[] deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.ArrayIntSerializer -> com.activeandroid.serializer.ArrayIntSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    int[] deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.ArrayStringSerializer -> com.activeandroid.serializer.ArrayStringSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    java.lang.String[] deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.BigDecimalSerializer -> com.activeandroid.serializer.BigDecimalSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    java.math.BigDecimal deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.CalendarSerializer -> com.activeandroid.serializer.CalendarSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.Long serialize(java.lang.Object) -> serialize
    java.util.Calendar deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.FileSerializer -> com.activeandroid.serializer.FileSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    java.io.File deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.JavaDateSerializer -> com.activeandroid.serializer.JavaDateSerializer:
    java.lang.String tag -> tag
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.Long serialize(java.lang.Object) -> serialize
    java.util.Date deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.ListSerializer -> com.activeandroid.serializer.ListSerializer:
    java.lang.String tag -> tag
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    java.util.List deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.SqlDateSerializer -> com.activeandroid.serializer.SqlDateSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.Long serialize(java.lang.Object) -> serialize
    java.sql.Date deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.TypeSerializer -> com.activeandroid.serializer.TypeSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.Object serialize(java.lang.Object) -> serialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
com.activeandroid.serializer.UUIDSerializer -> com.activeandroid.serializer.UUIDSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.String serialize(java.lang.Object) -> serialize
    java.util.UUID deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.serializer.UtilDateSerializer -> com.activeandroid.serializer.UtilDateSerializer:
    java.lang.Class getDeserializedType() -> getDeserializedType
    java.lang.Class getSerializedType() -> getSerializedType
    java.lang.Long serialize(java.lang.Object) -> serialize
    java.util.Date deserialize(java.lang.Object) -> deserialize
    java.lang.Object deserialize(java.lang.Object) -> deserialize
    java.lang.Object serialize(java.lang.Object) -> serialize
com.activeandroid.util.IOUtils -> com.activeandroid.util.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.activeandroid.util.Log -> com.activeandroid.util.Log:
    java.lang.String sTag -> sTag
    boolean sEnabled -> sEnabled
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    void setsTag(java.lang.String) -> setsTag
    boolean isLoggingEnabled() -> isLoggingEnabled
    int v(java.lang.String) -> v
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.Throwable) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String) -> d
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.Throwable) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String) -> i
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.Throwable) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String) -> w
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String) -> e
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.Throwable) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int t(java.lang.String,java.lang.Object[]) -> t
com.activeandroid.util.NaturalOrderComparator -> com.activeandroid.util.NaturalOrderComparator:
    int compareRight(java.lang.String,java.lang.String) -> compareRight
    int compare(java.lang.Object,java.lang.Object) -> compare
    char charAt(java.lang.String,int) -> charAt
com.activeandroid.util.ReflectionUtils -> com.activeandroid.util.ReflectionUtils:
    boolean isModel(java.lang.Class) -> isModel
    boolean isTypeSerializer(java.lang.Class) -> isTypeSerializer
    java.lang.Object getMetaData(android.content.Context,java.lang.String) -> getMetaData
    java.util.Set getDeclaredColumnFields(java.lang.Class) -> getDeclaredColumnFields
    boolean isSubclassOf(java.lang.Class,java.lang.Class) -> isSubclassOf
com.activeandroid.util.ReflectionUtils$1 -> com.activeandroid.util.ReflectionUtils$1:
    int compare(java.lang.reflect.Field,java.lang.reflect.Field) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.activeandroid.util.SQLiteUtils -> com.activeandroid.util.SQLiteUtils:
    java.lang.String tag -> tag
    boolean FOREIGN_KEYS_SUPPORTED -> FOREIGN_KEYS_SUPPORTED
    java.util.HashMap TYPE_MAP -> TYPE_MAP
    java.util.HashMap sIndexGroupMap -> sIndexGroupMap
    java.util.HashMap sUniqueGroupMap -> sUniqueGroupMap
    java.util.HashMap sOnUniqueConflictsMap -> sOnUniqueConflictsMap
    void execSql(java.lang.String) -> execSql
    void execSql(java.lang.String,java.lang.Object[]) -> execSql
    com.activeandroid.Model rawQuerySingle(java.lang.Class,java.lang.String,java.lang.String[]) -> rawQuerySingle
    java.util.List rawQuery(java.lang.Class,java.lang.String,java.lang.String[]) -> rawQuery
    int intQuery(java.lang.String,java.lang.String[]) -> intQuery
    java.util.ArrayList createUniqueDefinition(com.activeandroid.TableInfo) -> createUniqueDefinition
    void createUniqueColumnDefinition(com.activeandroid.TableInfo,java.lang.reflect.Field) -> createUniqueColumnDefinition
    java.lang.String[] createIndexDefinition(com.activeandroid.TableInfo) -> createIndexDefinition
    void createIndexColumnDefinition(com.activeandroid.TableInfo,java.lang.reflect.Field) -> createIndexColumnDefinition
    java.lang.String createTableDefinition(com.activeandroid.TableInfo) -> createTableDefinition
    java.lang.String createColumnDefinition(com.activeandroid.TableInfo,java.lang.reflect.Field) -> createColumnDefinition
    java.util.List processCursor(java.lang.Class,android.database.Cursor) -> processCursor
    int processIntCursor(android.database.Cursor) -> processIntCursor
    java.util.List lexSqlScript(java.lang.String) -> lexSqlScript
com.activeandroid.util.SQLiteUtils$1 -> com.activeandroid.util.SQLiteUtils$1:
com.activeandroid.util.SQLiteUtils$SQLiteType -> com.activeandroid.util.SQLiteUtils$SQLiteType:
    com.activeandroid.util.SQLiteUtils$SQLiteType INTEGER -> INTEGER
    com.activeandroid.util.SQLiteUtils$SQLiteType REAL -> REAL
    com.activeandroid.util.SQLiteUtils$SQLiteType TEXT -> TEXT
    com.activeandroid.util.SQLiteUtils$SQLiteType BLOB -> BLOB
    com.activeandroid.util.SQLiteUtils$SQLiteType[] ENUM$VALUES -> ENUM$VALUES
    com.activeandroid.util.SQLiteUtils$SQLiteType[] values() -> values
    com.activeandroid.util.SQLiteUtils$SQLiteType valueOf(java.lang.String) -> valueOf
com.activeandroid.util.SqlParser -> com.activeandroid.util.SqlParser:
    int STATE_NONE -> STATE_NONE
    int STATE_STRING -> STATE_STRING
    int STATE_COMMENT -> STATE_COMMENT
    int STATE_COMMENT_BLOCK -> STATE_COMMENT_BLOCK
    java.util.List parse(java.io.InputStream) -> parse
    boolean isNewLine(char) -> isNewLine
    boolean isWhitespace(char) -> isWhitespace
com.activeandroid.util.Tokenizer -> com.activeandroid.util.Tokenizer:
    java.io.InputStream mStream -> mStream
    boolean mIsNext -> mIsNext
    int mCurrent -> mCurrent
    boolean hasNext() -> hasNext
    int next() -> next
    boolean skip(java.lang.String) -> skip
com.activeandroid.widget.ModelAdapter -> com.activeandroid.widget.ModelAdapter:
    void setData(java.util.Collection) -> setData
    long getItemId(int) -> getItemId
com.google.zxing.BarcodeFormat -> com.a.a.a:
    com.google.zxing.BarcodeFormat AZTEC -> a
    com.google.zxing.BarcodeFormat CODABAR -> b
    com.google.zxing.BarcodeFormat CODE_39 -> c
    com.google.zxing.BarcodeFormat CODE_93 -> d
    com.google.zxing.BarcodeFormat CODE_128 -> e
    com.google.zxing.BarcodeFormat DATA_MATRIX -> f
    com.google.zxing.BarcodeFormat EAN_8 -> g
    com.google.zxing.BarcodeFormat EAN_13 -> h
    com.google.zxing.BarcodeFormat ITF -> i
    com.google.zxing.BarcodeFormat MAXICODE -> j
    com.google.zxing.BarcodeFormat PDF_417 -> k
    com.google.zxing.BarcodeFormat QR_CODE -> l
    com.google.zxing.BarcodeFormat RSS_14 -> m
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> n
    com.google.zxing.BarcodeFormat UPC_A -> o
    com.google.zxing.BarcodeFormat UPC_E -> p
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> q
    com.google.zxing.BarcodeFormat[] ENUM$VALUES -> r
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.a.a.b:
    com.google.zxing.LuminanceSource source -> a
    com.google.zxing.LuminanceSource getLuminanceSource() -> a
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> a
    int getWidth() -> c
    int getHeight() -> d
com.google.zxing.BinaryBitmap -> com.a.a.c:
    com.google.zxing.Binarizer binarizer -> a
    com.google.zxing.common.BitMatrix matrix -> b
    int getWidth() -> a
    int getHeight() -> b
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> c
    boolean isRotateSupported() -> d
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> e
com.google.zxing.ChecksumException -> com.a.a.d:
    com.google.zxing.ChecksumException instance -> a
    com.google.zxing.ChecksumException getChecksumInstance() -> a
com.google.zxing.DecodeHintType -> com.a.a.e:
    com.google.zxing.DecodeHintType OTHER -> a
    com.google.zxing.DecodeHintType PURE_BARCODE -> b
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> c
    com.google.zxing.DecodeHintType TRY_HARDER -> d
    com.google.zxing.DecodeHintType CHARACTER_SET -> e
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> f
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> g
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> h
    com.google.zxing.DecodeHintType[] ENUM$VALUES -> i
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.a.a.f:
    com.google.zxing.FormatException instance -> a
    com.google.zxing.FormatException getFormatInstance() -> a
com.google.zxing.LuminanceSource -> com.a.a.g:
    int width -> a
    int height -> b
    byte[] getRow(int,byte[]) -> a
    byte[] getMatrix() -> a
    int getWidth() -> b
    int getHeight() -> c
    boolean isRotateSupported() -> d
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> e
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.a.a.h:
    java.util.Map hints -> a
    com.google.zxing.Reader[] readers -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> a
    void setHints(java.util.Map) -> a
    void reset() -> a
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> b
com.google.zxing.NotFoundException -> com.a.a.i:
    com.google.zxing.NotFoundException instance -> a
    com.google.zxing.NotFoundException getNotFoundInstance() -> a
com.google.zxing.Reader -> com.a.a.j:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
com.google.zxing.ReaderException -> com.a.a.k:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.a.a.l:
    java.lang.String text -> a
    byte[] rawBytes -> b
    com.google.zxing.ResultPoint[] resultPoints -> c
    com.google.zxing.BarcodeFormat format -> d
    java.util.Map resultMetadata -> e
    long timestamp -> f
    java.lang.String getText() -> a
    byte[] getRawBytes() -> b
    com.google.zxing.ResultPoint[] getResultPoints() -> c
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> d
    java.util.Map getResultMetadata() -> e
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> a
    void putAllMetadata(java.util.Map) -> a
    void addResultPoints(com.google.zxing.ResultPoint[]) -> a
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.a.a.m:
    com.google.zxing.ResultMetadataType OTHER -> a
    com.google.zxing.ResultMetadataType ORIENTATION -> b
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> c
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> d
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> e
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> f
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> g
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> h
    com.google.zxing.ResultMetadataType[] ENUM$VALUES -> i
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.a.a.n:
    float x -> a
    float y -> b
    float getX() -> a
    float getY() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> a
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
com.google.zxing.ResultPointCallback -> com.a.a.o:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> a
com.google.zxing.aztec.AztecDetectorResult -> com.a.a.a.a:
    boolean compact -> a
    int nbDatablocks -> b
    int nbLayers -> c
    int getNbLayers() -> a
    int getNbDatablocks() -> b
    boolean isCompact() -> c
com.google.zxing.aztec.AztecReader -> com.a.a.a.b:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
com.google.zxing.aztec.decoder.Decoder -> com.a.a.a.a.a:
    int[] NB_BITS_COMPACT -> a
    int[] NB_BITS -> b
    int[] NB_DATABLOCK_COMPACT -> c
    int[] NB_DATABLOCK -> d
    java.lang.String[] UPPER_TABLE -> e
    java.lang.String[] LOWER_TABLE -> f
    java.lang.String[] MIXED_TABLE -> g
    java.lang.String[] PUNCT_TABLE -> h
    java.lang.String[] DIGIT_TABLE -> i
    int numCodewords -> j
    int codewordSize -> k
    com.google.zxing.aztec.AztecDetectorResult ddata -> l
    int invertedBitCount -> m
    int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table -> n
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> a
    java.lang.String getEncodedData(boolean[]) -> a
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> a
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> a
    boolean[] correctBits(boolean[]) -> b
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> a
    com.google.zxing.common.BitMatrix removeDashedLines(com.google.zxing.common.BitMatrix) -> b
    int readCode(boolean[],int,int) -> a
    int[] $SWITCH_TABLE$com$google$zxing$aztec$decoder$Decoder$Table() -> a
com.google.zxing.aztec.decoder.Decoder$Table -> com.a.a.a.a.b:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> a
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> b
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> c
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> d
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> e
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> f
    com.google.zxing.aztec.decoder.Decoder$Table[] ENUM$VALUES -> g
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.a.a.a.b.a:
    com.google.zxing.common.BitMatrix image -> a
    boolean compact -> b
    int nbLayers -> c
    int nbDataBlocks -> d
    int nbCenterLayers -> e
    int shift -> f
    com.google.zxing.aztec.AztecDetectorResult detect() -> a
    void extractParameters(com.google.zxing.aztec.detector.Detector$Point[]) -> a
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.aztec.detector.Detector$Point[]) -> b
    void correctParameterData(boolean[],boolean) -> a
    com.google.zxing.aztec.detector.Detector$Point[] getBullEyeCornerPoints(com.google.zxing.aztec.detector.Detector$Point) -> a
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> b
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    void getParameters(boolean[]) -> a
    boolean[] sampleLine(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,int) -> a
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> a
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> a
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> a
    boolean isValid(int,int) -> a
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> b
com.google.zxing.aztec.detector.Detector$Point -> com.a.a.a.b.b:
    int x -> a
    int y -> b
    com.google.zxing.ResultPoint toResultPoint() -> a
com.google.zxing.common.BitArray -> com.a.a.b.a:
    int[] bits -> a
    int size -> b
    int getSize() -> a
    boolean get(int) -> a
    void set(int) -> b
    int getNextSet(int) -> c
    int getNextUnset(int) -> d
    void clear() -> b
    boolean isRange(int,int,boolean) -> a
    void reverse() -> c
    int[] makeArray(int) -> e
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.a.a.b.b:
    int width -> a
    int height -> b
    int rowSize -> c
    int[] bits -> d
    boolean get(int,int) -> a
    void set(int,int) -> b
    void flip(int,int) -> c
    void setRegion(int,int,int,int) -> a
    int[] getEnclosingRectangle() -> a
    int[] getTopLeftOnBit() -> b
    int[] getBottomRightOnBit() -> c
    int getWidth() -> d
    int getHeight() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.a.a.b.c:
    byte[] bytes -> a
    int byteOffset -> b
    int bitOffset -> c
    int getBitOffset() -> a
    int getByteOffset() -> b
    int readBits(int) -> a
    int available() -> c
com.google.zxing.common.CharacterSetECI -> com.a.a.b.d:
    com.google.zxing.common.CharacterSetECI Cp437 -> a
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> b
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> c
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> d
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> e
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> f
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> g
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> h
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> i
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> j
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> k
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> l
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> m
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> n
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> o
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> p
    com.google.zxing.common.CharacterSetECI SJIS -> q
    com.google.zxing.common.CharacterSetECI Cp1250 -> r
    com.google.zxing.common.CharacterSetECI Cp1251 -> s
    com.google.zxing.common.CharacterSetECI Cp1252 -> t
    com.google.zxing.common.CharacterSetECI Cp1256 -> u
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> v
    com.google.zxing.common.CharacterSetECI UTF8 -> w
    com.google.zxing.common.CharacterSetECI ASCII -> x
    com.google.zxing.common.CharacterSetECI Big5 -> y
    com.google.zxing.common.CharacterSetECI GB18030 -> z
    com.google.zxing.common.CharacterSetECI EUC_KR -> A
    java.util.Map VALUE_TO_ECI -> B
    java.util.Map NAME_TO_ECI -> C
    int[] values -> D
    java.lang.String[] otherEncodingNames -> E
    com.google.zxing.common.CharacterSetECI[] ENUM$VALUES -> F
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> a
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
com.google.zxing.common.DecoderResult -> com.a.a.b.e:
    byte[] rawBytes -> a
    java.lang.String text -> b
    java.util.List byteSegments -> c
    java.lang.String ecLevel -> d
    byte[] getRawBytes() -> a
    java.lang.String getText() -> b
    java.util.List getByteSegments() -> c
    java.lang.String getECLevel() -> d
com.google.zxing.common.DefaultGridSampler -> com.a.a.b.f:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> a
com.google.zxing.common.DetectorResult -> com.a.a.b.g:
    com.google.zxing.common.BitMatrix bits -> a
    com.google.zxing.ResultPoint[] points -> b
    com.google.zxing.common.BitMatrix getBits() -> d
    com.google.zxing.ResultPoint[] getPoints() -> e
com.google.zxing.common.GlobalHistogramBinarizer -> com.a.a.b.h:
    byte[] EMPTY -> a
    byte[] luminances -> b
    int[] buckets -> c
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> a
    void initArrays(int) -> a
    int estimateBlackPoint(int[]) -> a
com.google.zxing.common.GridSampler -> com.a.a.b.i:
    com.google.zxing.common.GridSampler gridSampler -> a
    com.google.zxing.common.GridSampler getInstance() -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> a
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> a
com.google.zxing.common.HybridBinarizer -> com.a.a.b.j:
    com.google.zxing.common.BitMatrix matrix -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> a
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> a
    int cap(int,int,int) -> a
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> a
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> a
com.google.zxing.common.PerspectiveTransform -> com.a.a.b.k:
    float a11 -> a
    float a12 -> b
    float a13 -> c
    float a21 -> d
    float a22 -> e
    float a23 -> f
    float a31 -> g
    float a32 -> h
    float a33 -> i
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> a
    void transformPoints(float[]) -> a
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> a
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> b
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> a
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> a
com.google.zxing.common.StringUtils -> com.a.a.b.l:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> a
    boolean ASSUME_SHIFT_JIS -> b
    java.lang.String guessEncoding(byte[],java.util.Map) -> a
com.google.zxing.common.detector.MathUtils -> com.a.a.b.a.a:
    int round(float) -> a
    float distance(float,float,float,float) -> a
    float distance(int,int,int,int) -> a
com.google.zxing.common.detector.WhiteRectangleDetector -> com.a.a.b.a.b:
    com.google.zxing.common.BitMatrix image -> a
    int height -> b
    int width -> c
    int leftInit -> d
    int rightInit -> e
    int downInit -> f
    int upInit -> g
    com.google.zxing.ResultPoint[] detect() -> a
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> a
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    boolean containsBlackPoint(int,int,int,boolean) -> a
com.google.zxing.common.reedsolomon.GenericGF -> com.a.a.b.b.a:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> a
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> b
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> c
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> d
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> e
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> f
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> g
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> h
    int[] expTable -> i
    int[] logTable -> j
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> k
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> l
    int size -> m
    int primitive -> n
    boolean initialized -> o
    void initialize() -> d
    void checkInit() -> e
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> a
    int addOrSubtract(int,int) -> b
    int exp(int) -> a
    int log(int) -> b
    int inverse(int) -> c
    int multiply(int,int) -> c
    int getSize() -> c
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.a.a.b.b.b:
    com.google.zxing.common.reedsolomon.GenericGF field -> a
    int[] coefficients -> b
    int getDegree() -> a
    boolean isZero() -> b
    int getCoefficient(int) -> a
    int evaluateAt(int) -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> c
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> a
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.a.a.b.b.c:
    com.google.zxing.common.reedsolomon.GenericGF field -> a
    void decode(int[],int) -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> a
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> a
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[],boolean) -> a
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.a.a.b.b.d:
com.google.zxing.datamatrix.DataMatrixReader -> com.a.a.c.a:
    com.google.zxing.ResultPoint[] NO_POINTS -> a
    com.google.zxing.datamatrix.decoder.Decoder decoder -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> a
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> a
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.a.a.c.a.a:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> a
    com.google.zxing.common.BitMatrix readMappingMatrix -> b
    com.google.zxing.datamatrix.decoder.Version version -> c
    com.google.zxing.datamatrix.decoder.Version getVersion() -> a
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> b
    byte[] readCodewords() -> b
    boolean readModule(int,int,int,int) -> a
    int readUtah(int,int,int,int) -> b
    int readCorner1(int,int) -> a
    int readCorner2(int,int) -> b
    int readCorner3(int,int) -> c
    int readCorner4(int,int) -> d
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> a
com.google.zxing.datamatrix.decoder.DataBlock -> com.a.a.c.a.b:
    int numDataCodewords -> a
    byte[] codewords -> b
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> a
    int getNumDataCodewords() -> a
    byte[] getCodewords() -> b
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.a.a.c.a.c:
    char[] C40_BASIC_SET_CHARS -> a
    char[] C40_SHIFT2_SET_CHARS -> b
    char[] TEXT_BASIC_SET_CHARS -> c
    char[] TEXT_SHIFT3_SET_CHARS -> d
    int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> e
    com.google.zxing.common.DecoderResult decode(byte[]) -> a
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> a
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> a
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> b
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> c
    void parseTwoBytes(int,int,int[]) -> a
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> d
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> a
    int unrandomize255State(int,int) -> a
    int[] $SWITCH_TABLE$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode() -> a
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.a.a.c.a.d:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> a
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> b
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> c
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> d
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> e
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> f
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> g
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> h
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.a.a.c.a.e:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> a
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> a
    void correctErrors(byte[],int) -> a
com.google.zxing.datamatrix.decoder.Version -> com.a.a.c.a.f:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> a
    int versionNumber -> b
    int symbolSizeRows -> c
    int symbolSizeColumns -> d
    int dataRegionSizeRows -> e
    int dataRegionSizeColumns -> f
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> g
    int totalCodewords -> h
    int getVersionNumber() -> a
    int getSymbolSizeRows() -> b
    int getSymbolSizeColumns() -> c
    int getDataRegionSizeRows() -> d
    int getDataRegionSizeColumns() -> e
    int getTotalCodewords() -> f
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> g
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> a
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> h
com.google.zxing.datamatrix.decoder.Version$ECB -> com.a.a.c.a.g:
    int count -> a
    int dataCodewords -> b
    int getCount() -> a
    int getDataCodewords() -> b
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.a.a.c.a.h:
    int ecCodewords -> a
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> b
    int getECCodewords() -> a
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> b
com.google.zxing.datamatrix.detector.Detector -> com.a.a.c.b.a:
    com.google.zxing.common.BitMatrix image -> a
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> b
    com.google.zxing.common.DetectorResult detect() -> a
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> a
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> a
    boolean isValid(com.google.zxing.ResultPoint) -> a
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> a
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> b
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.a.a.c.b.b:
    com.google.zxing.ResultPoint from -> a
    com.google.zxing.ResultPoint to -> b
    int transitions -> c
    com.google.zxing.ResultPoint getFrom() -> a
    com.google.zxing.ResultPoint getTo() -> b
    int getTransitions() -> c
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.a.a.c.b.c:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.maxicode.MaxiCodeReader -> com.a.a.d.a:
    com.google.zxing.ResultPoint[] NO_POINTS -> a
    com.google.zxing.maxicode.decoder.Decoder decoder -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> a
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.a.a.d.a.a:
    int[][] BITNR -> a
    com.google.zxing.common.BitMatrix bitMatrix -> b
    byte[] readCodewords() -> a
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.a.a.d.a.b:
    java.text.NumberFormat NINE_DIGITS -> a
    java.text.NumberFormat THREE_DIGITS -> b
    java.lang.String[] SETS -> c
    com.google.zxing.common.DecoderResult decode(byte[],int) -> a
    int getBit(int,byte[]) -> a
    int getInt(byte[],byte[]) -> a
    int getCountry(byte[]) -> a
    int getServiceClass(byte[]) -> b
    int getPostCode2Length(byte[]) -> c
    int getPostCode2(byte[]) -> d
    java.lang.String getPostCode3(byte[]) -> e
    java.lang.String getMessage(byte[],int,int) -> a
com.google.zxing.maxicode.decoder.Decoder -> com.a.a.d.a.c:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> a
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> a
    void correctErrors(byte[],int,int,int,int) -> a
com.google.zxing.oned.CodaBarReader -> com.a.a.e.a:
    char[] ALPHABET -> a
    int[] CHARACTER_ENCODINGS -> b
    char[] STARTEND_ENCODING -> c
    java.lang.StringBuilder decodeRowResult -> d
    int[] counters -> e
    int counterLength -> f
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void validatePattern(int) -> a
    void setCounters(com.google.zxing.common.BitArray) -> a
    void counterAppend(int) -> b
    int findStartPattern() -> b
    boolean arrayContains(char[],char) -> a
    int toNarrowWidePattern(int) -> c
com.google.zxing.oned.Code128Reader -> com.a.a.e.b:
    int[][] CODE_PATTERNS -> a
    int[] findStartPattern(com.google.zxing.common.BitArray) -> a
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
com.google.zxing.oned.Code39Reader -> com.a.a.e.c:
    char[] ALPHABET -> b
    int[] CHARACTER_ENCODINGS -> a
    int ASTERISK_ENCODING -> c
    boolean usingCheckDigit -> d
    boolean extendedMode -> e
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> a
    int toNarrowWidePattern(int[]) -> a
    char patternToChar(int) -> a
    java.lang.String decodeExtended(java.lang.CharSequence) -> a
com.google.zxing.oned.Code93Reader -> com.a.a.e.d:
    char[] ALPHABET -> a
    int[] CHARACTER_ENCODINGS -> b
    int ASTERISK_ENCODING -> c
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> a
    int toPattern(int[]) -> a
    char patternToChar(int) -> a
    java.lang.String decodeExtended(java.lang.CharSequence) -> a
    void checkChecksums(java.lang.CharSequence) -> b
    void checkOneChecksum(java.lang.CharSequence,int,int) -> a
com.google.zxing.oned.EAN13Reader -> com.a.a.e.e:
    int[] FIRST_DIGIT_ENCODINGS -> a
    int[] decodeMiddleCounters -> f
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> b
    void determineFirstDigit(java.lang.StringBuilder,int) -> a
com.google.zxing.oned.EAN8Reader -> com.a.a.e.f:
    int[] decodeMiddleCounters -> a
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> b
com.google.zxing.oned.EANManufacturerOrgSupport -> com.a.a.e.g:
    java.util.List ranges -> a
    java.util.List countryIdentifiers -> b
    java.lang.String lookupCountryIdentifier(java.lang.String) -> a
    void add(int[],java.lang.String) -> a
    void initIfNeeded() -> a
com.google.zxing.oned.ITFReader -> com.a.a.e.h:
    int[] DEFAULT_ALLOWED_LENGTHS -> b
    int narrowLineWidth -> c
    int[] START_PATTERN -> d
    int[] END_PATTERN_REVERSED -> e
    int[][] PATTERNS -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> a
    int[] decodeStart(com.google.zxing.common.BitArray) -> a
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> a
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> c
    int[] decodeEnd(com.google.zxing.common.BitArray) -> b
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> c
    int decodeDigit(int[]) -> a
com.google.zxing.oned.MultiFormatOneDReader -> com.a.a.e.i:
    com.google.zxing.oned.OneDReader[] readers -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void reset() -> a
com.google.zxing.oned.MultiFormatUPCEANReader -> com.a.a.e.j:
    com.google.zxing.oned.UPCEANReader[] readers -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void reset() -> a
com.google.zxing.oned.OneDReader -> com.a.a.e.k:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> b
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> a
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> b
    int patternMatchVariance(int[],int[],int) -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
com.google.zxing.oned.UPCAReader -> com.a.a.e.l:
    com.google.zxing.oned.UPCEANReader ean13Reader -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> b
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> a
com.google.zxing.oned.UPCEANExtension2Support -> com.a.a.e.m:
    int[] decodeMiddleCounters -> a
    java.lang.StringBuilder decodeRowStringBuffer -> b
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> a
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    java.util.Map parseExtensionString(java.lang.String) -> a
com.google.zxing.oned.UPCEANExtension5Support -> com.a.a.e.n:
    int[] CHECK_DIGIT_ENCODINGS -> a
    int[] decodeMiddleCounters -> b
    java.lang.StringBuilder decodeRowStringBuffer -> c
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> a
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    int extensionChecksum(java.lang.CharSequence) -> a
    int determineCheckDigit(int) -> a
    java.util.Map parseExtensionString(java.lang.String) -> a
    java.lang.String parseExtension5String(java.lang.String) -> b
com.google.zxing.oned.UPCEANExtensionSupport -> com.a.a.e.o:
    int[] EXTENSION_START_PATTERN -> a
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> b
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> c
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> a
com.google.zxing.oned.UPCEANReader -> com.a.a.e.p:
    int[] START_END_PATTERN -> b
    int[] MIDDLE_PATTERN -> c
    int[][] L_PATTERNS -> d
    int[][] L_AND_G_PATTERNS -> e
    java.lang.StringBuilder decodeRowStringBuffer -> a
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> f
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> g
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> a
    boolean checkChecksum(java.lang.String) -> a
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> a
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> a
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> a
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> a
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> a
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> b
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
com.google.zxing.oned.UPCEReader -> com.a.a.e.q:
    int[] MIDDLE_END_PATTERN -> a
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> f
    int[] decodeMiddleCounters -> g
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> a
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> a
    boolean checkChecksum(java.lang.String) -> a
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> a
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> b
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> b
com.google.zxing.oned.rss.AbstractRSSReader -> com.a.a.e.a.a:
    int[] decodeFinderCounters -> a
    int[] dataCharacterCounters -> b
    float[] oddRoundingErrors -> c
    float[] evenRoundingErrors -> d
    int[] oddCounts -> e
    int[] evenCounts -> f
    int[] getDecodeFinderCounters() -> b
    int[] getDataCharacterCounters() -> c
    float[] getOddRoundingErrors() -> d
    float[] getEvenRoundingErrors() -> e
    int[] getOddCounts() -> f
    int[] getEvenCounts() -> g
    int parseFinderValue(int[],int[][]) -> a
    int count(int[]) -> a
    void increment(int[],float[]) -> a
    void decrement(int[],float[]) -> b
    boolean isFinderPattern(int[]) -> b
com.google.zxing.oned.rss.DataCharacter -> com.a.a.e.a.b:
    int value -> a
    int checksumPortion -> b
    int getValue() -> a
    int getChecksumPortion() -> b
com.google.zxing.oned.rss.FinderPattern -> com.a.a.e.a.c:
    int value -> a
    int[] startEnd -> b
    com.google.zxing.ResultPoint[] resultPoints -> c
    int getValue() -> a
    int[] getStartEnd() -> b
    com.google.zxing.ResultPoint[] getResultPoints() -> c
com.google.zxing.oned.rss.Pair -> com.a.a.e.a.d:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> a
    int count -> b
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> c
    int getCount() -> d
    void incrementCount() -> e
com.google.zxing.oned.rss.RSS14Reader -> com.a.a.e.a.e:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> a
    int[] INSIDE_ODD_TOTAL_SUBSET -> b
    int[] OUTSIDE_GSUM -> c
    int[] INSIDE_GSUM -> d
    int[] OUTSIDE_ODD_WIDEST -> e
    int[] INSIDE_ODD_WIDEST -> f
    int[][] FINDER_PATTERNS -> g
    java.util.List possibleLeftPairs -> h
    java.util.List possibleRightPairs -> i
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> a
    void reset() -> a
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> a
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> b
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> a
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> a
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> a
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> a
    void adjustOddEvenCounts(boolean,int) -> a
com.google.zxing.oned.rss.RSSUtils -> com.a.a.e.a.f:
    int getRSSvalue(int[],int,boolean) -> a
    int combins(int,int) -> a
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.a.a.e.a.a.a:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> a
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.a.a.e.a.a.b:
    boolean mayBeLast -> a
    com.google.zxing.oned.rss.DataCharacter leftChar -> b
    com.google.zxing.oned.rss.DataCharacter rightChar -> c
    com.google.zxing.oned.rss.FinderPattern finderPattern -> d
    boolean mayBeLast() -> a
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> b
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> c
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> d
    boolean mustBeLast() -> e
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.a.a.e.a.a.c:
    int[] SYMBOL_WIDEST -> a
    int[] EVEN_TOTAL_SUBSET -> b
    int[] GSUM -> c
    int[][] FINDER_PATTERNS -> d
    int[][] WEIGHTS -> e
    int[][] FINDER_PATTERN_SEQUENCES -> f
    int LONGEST_SEQUENCE_SIZE -> g
    java.util.List pairs -> h
    int[] startEnd -> i
    int[] currentSequence -> j
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> a
    void reset() -> a
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> a
    com.google.zxing.Result constructResult(java.util.List) -> a
    boolean checkChecksum() -> h
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> a
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> a
    boolean checkPairSequence(java.util.List,com.google.zxing.oned.rss.FinderPattern) -> a
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> b
    void reverseCounters(int[]) -> c
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> a
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> a
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> a
    void adjustOddEvenCounts(int) -> a
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.a.a.e.a.a.a.a:
    void addWeightCode(java.lang.StringBuilder,int) -> a
    int checkWeight(int) -> a
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.a.a.e.a.a.a.b:
    void addWeightCode(java.lang.StringBuilder,int) -> a
    int checkWeight(int) -> a
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.a.a.e.a.a.a.c:
    java.lang.String parseInformation() -> a
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.a.a.e.a.a.a.d:
    java.lang.String parseInformation() -> a
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.a.a.e.a.a.a.e:
    java.lang.String dateCode -> a
    java.lang.String firstAIdigits -> b
    java.lang.String parseInformation() -> a
    void encodeCompressedDate(java.lang.StringBuilder,int) -> c
    void addWeightCode(java.lang.StringBuilder,int) -> a
    int checkWeight(int) -> a
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.a.a.e.a.a.a.f:
    java.lang.String parseInformation() -> a
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.a.a.e.a.a.a.g:
    java.lang.String parseInformation() -> a
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.a.a.e.a.a.a.h:
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> b
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> a
    void appendCheckDigit(java.lang.StringBuilder,int) -> a
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.a.a.e.a.a.a.i:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> b
    void addWeightCode(java.lang.StringBuilder,int) -> a
    int checkWeight(int) -> a
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.a.a.e.a.a.a.j:
    com.google.zxing.common.BitArray information -> a
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> b
    com.google.zxing.common.BitArray getInformation() -> b
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> c
    java.lang.String parseInformation() -> a
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> a
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.a.a.e.a.a.a.k:
    java.lang.String parseInformation() -> a
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.a.a.e.a.a.a.l:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> a
    boolean finished -> b
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> a
    boolean isFinished() -> b
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.a.a.e.a.a.a.m:
    int position -> a
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> b
    int getPosition() -> a
    void setPosition(int) -> a
    void incrementPosition(int) -> b
    boolean isAlpha() -> b
    boolean isIsoIec646() -> c
    void setNumeric() -> d
    void setAlpha() -> e
    void setIsoIec646() -> f
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.a.a.e.a.a.a.n:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> a
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> b
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> c
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] ENUM$VALUES -> d
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.a.a.e.a.a.a.o:
    char value -> a
    char getValue() -> a
    boolean isFNC1() -> b
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.a.a.e.a.a.a.p:
    java.lang.String newString -> a
    int remainingValue -> b
    boolean remaining -> c
    java.lang.String getNewString() -> a
    boolean isRemaining() -> b
    int getRemainingValue() -> c
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.a.a.e.a.a.a.q:
    int firstDigit -> a
    int secondDigit -> b
    int getFirstDigit() -> a
    int getSecondDigit() -> b
    boolean isFirstDigitFNC1() -> c
    boolean isSecondDigitFNC1() -> d
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.a.a.e.a.a.a.r:
    int newPosition -> a
    int getNewPosition() -> e
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.a.a.e.a.a.a.s:
    java.lang.Object VARIABLE_LENGTH -> a
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> b
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> c
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> d
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> e
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> a
    java.lang.String processFixedAI(int,int,java.lang.String) -> a
    java.lang.String processVariableAI(int,int,java.lang.String) -> b
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.a.a.e.a.a.a.t:
    com.google.zxing.common.BitArray information -> a
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> b
    java.lang.StringBuilder buffer -> c
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> a
    boolean isStillNumeric(int) -> a
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> b
    int extractNumericValueFromBitArray(int,int) -> a
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> a
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> a
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> a
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> b
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> c
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> d
    boolean isStillIsoIec646(int) -> c
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> d
    boolean isStillAlpha(int) -> e
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> f
    boolean isAlphaTo646ToAlphaLatch(int) -> g
    boolean isAlphaOr646ToNumericLatch(int) -> h
    boolean isNumericToAlphaNumericLatch(int) -> i
com.google.zxing.pdf417.PDF417Reader -> com.a.a.f.a:
    com.google.zxing.ResultPoint[] NO_POINTS -> a
    com.google.zxing.pdf417.decoder.Decoder decoder -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> a
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> a
    int findPatternStart(int,int,com.google.zxing.common.BitMatrix) -> a
    int findPatternEnd(int,int,com.google.zxing.common.BitMatrix) -> b
com.google.zxing.pdf417.decoder.BitMatrixParser -> com.a.a.f.a.a:
    int[] NO_ERRORS -> a
    com.google.zxing.common.BitMatrix bitMatrix -> b
    int rows -> c
    int leftColumnECData -> d
    int rightColumnECData -> e
    int eraseCount -> f
    int[] erasures -> g
    int ecLevel -> h
    int[] SYMBOL_TABLE -> i
    int[] CODEWORD_TABLE -> j
    int[] readCodewords() -> a
    int[] trimArray(int[],int) -> a
    int processRow(int[],int,int,int[],int) -> a
    int getCodeword(long) -> a
    int findCodewordIndex(long) -> b
    int[] getErasures() -> b
    int getECLevel() -> c
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.a.a.f.a.b:
    char[] PUNCT_CHARS -> a
    char[] MIXED_CHARS -> b
    java.math.BigInteger[] EXP900 -> c
    int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> d
    com.google.zxing.common.DecoderResult decode(int[]) -> a
    int textCompaction(int[],int,java.lang.StringBuilder) -> a
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> a
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> a
    int numericCompaction(int[],int,java.lang.StringBuilder) -> b
    java.lang.String decodeBase900toBase10(int[],int) -> a
    int[] $SWITCH_TABLE$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode() -> a
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.a.a.f.a.c:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> a
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> b
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> c
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> d
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> e
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> f
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] ENUM$VALUES -> g
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.Decoder -> com.a.a.f.a.d:
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> a
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> a
    void verifyCodewordCount(int[],int) -> a
    void correctErrors(int[],int[],int) -> a
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.a.a.f.a.a.a:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> a
    void decode(int[],int,int[]) -> a
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> a
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> a
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> a
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.a.a.f.a.a.b:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> a
    int[] expTable -> b
    int[] logTable -> c
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> d
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> e
    int modulus -> f
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> a
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> b
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> a
    int add(int,int) -> b
    int subtract(int,int) -> c
    int exp(int) -> a
    int log(int) -> b
    int inverse(int) -> c
    int multiply(int,int) -> d
    int getSize() -> c
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.a.a.f.a.a.c:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> a
    int[] coefficients -> b
    int getDegree() -> a
    boolean isZero() -> b
    int getCoefficient(int) -> a
    int evaluateAt(int) -> b
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> a
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> b
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> c
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> c
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> c
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> a
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.a.a.f.b.a:
    int[] START_PATTERN -> a
    int[] START_PATTERN_REVERSE -> b
    int[] STOP_PATTERN -> c
    int[] STOP_PATTERN_REVERSE -> d
    com.google.zxing.BinaryBitmap image -> e
    com.google.zxing.common.DetectorResult detect() -> a
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> a
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,boolean) -> a
    com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix,boolean) -> b
    void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean) -> a
    float computeModuleWidth(com.google.zxing.ResultPoint[]) -> a
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> a
    int computeYDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> b
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> a
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> a
    int patternMatchVariance(int[],int[],int) -> a
com.google.zxing.qrcode.QRCodeReader -> com.a.a.g.a:
    com.google.zxing.ResultPoint[] NO_POINTS -> a
    com.google.zxing.qrcode.decoder.Decoder decoder -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> a
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> a
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.a.a.g.a.a:
    com.google.zxing.common.BitMatrix bitMatrix -> a
    com.google.zxing.qrcode.decoder.Version parsedVersion -> b
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> c
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> a
    com.google.zxing.qrcode.decoder.Version readVersion() -> b
    int copyBit(int,int,int) -> a
    byte[] readCodewords() -> c
com.google.zxing.qrcode.decoder.DataBlock -> com.a.a.g.a.b:
    int numDataCodewords -> a
    byte[] codewords -> b
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    int getNumDataCodewords() -> a
    byte[] getCodewords() -> b
com.google.zxing.qrcode.decoder.DataMask -> com.a.a.g.a.c:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> a
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> a
    boolean isMasked(int,int) -> a
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.a.a.g.a.d:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.a.a.g.a.e:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.a.a.g.a.f:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.a.a.g.a.g:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.a.a.g.a.h:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.a.a.g.a.i:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.a.a.g.a.j:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.a.a.g.a.k:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.a.a.g.a.l:
    char[] ALPHANUMERIC_CHARS -> a
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> a
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> a
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> b
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> a
    char toAlphaNumericChar(int) -> a
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> a
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> c
    int parseECIValue(com.google.zxing.common.BitSource) -> a
com.google.zxing.qrcode.decoder.Decoder -> com.a.a.g.a.m:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> a
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> a
    void correctErrors(byte[],int) -> a
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.a.a.g.a.n:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> b
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> c
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> d
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> e
    int bits -> f
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] ENUM$VALUES -> g
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.FormatInformation -> com.a.a.g.a.o:
    int[][] FORMAT_INFO_DECODE_LOOKUP -> a
    int[] BITS_SET_IN_HALF_BYTE -> b
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> c
    byte dataMask -> d
    int numBitsDiffering(int,int) -> a
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> b
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> c
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> a
    byte getDataMask() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.a.a.g.a.p:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> a
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> b
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> c
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> d
    com.google.zxing.qrcode.decoder.Mode BYTE -> e
    com.google.zxing.qrcode.decoder.Mode ECI -> f
    com.google.zxing.qrcode.decoder.Mode KANJI -> g
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> h
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> i
    com.google.zxing.qrcode.decoder.Mode HANZI -> j
    int[] characterCountBitsForVersions -> k
    int bits -> l
    com.google.zxing.qrcode.decoder.Mode[] ENUM$VALUES -> m
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> a
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> a
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.Version -> com.a.a.g.a.q:
    int[] VERSION_DECODE_INFO -> a
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> b
    int versionNumber -> c
    int[] alignmentPatternCenters -> d
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> e
    int totalCodewords -> f
    int getVersionNumber() -> a
    int[] getAlignmentPatternCenters() -> b
    int getTotalCodewords() -> c
    int getDimensionForVersion() -> d
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> a
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> b
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> c
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> e
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> f
com.google.zxing.qrcode.decoder.Version$ECB -> com.a.a.g.a.r:
    int count -> a
    int dataCodewords -> b
    int getCount() -> a
    int getDataCodewords() -> b
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.a.a.g.a.s:
    int ecCodewordsPerBlock -> a
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> b
    int getECCodewordsPerBlock() -> a
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> b
com.google.zxing.qrcode.detector.AlignmentPattern -> com.a.a.g.b.a:
    float estimatedModuleSize -> a
    boolean aboutEquals(float,float,float) -> a
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> b
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.a.a.g.b.b:
    com.google.zxing.common.BitMatrix image -> a
    java.util.List possibleCenters -> b
    int startX -> c
    int startY -> d
    int width -> e
    int height -> f
    float moduleSize -> g
    int[] crossCheckStateCount -> h
    com.google.zxing.ResultPointCallback resultPointCallback -> i
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> a
    float centerFromEnd(int[],int) -> a
    boolean foundPatternCross(int[]) -> a
    float crossCheckVertical(int,int,int,int) -> a
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> a
com.google.zxing.qrcode.detector.Detector -> com.a.a.g.b.c:
    com.google.zxing.common.BitMatrix image -> a
    com.google.zxing.ResultPointCallback resultPointCallback -> b
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> a
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> a
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> a
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> a
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> a
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> b
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> a
com.google.zxing.qrcode.detector.FinderPattern -> com.a.a.g.b.d:
    float estimatedModuleSize -> a
    int count -> b
    float getEstimatedModuleSize() -> c
    int getCount() -> d
    boolean aboutEquals(float,float,float) -> a
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> b
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.a.a.g.b.e:
    com.google.zxing.common.BitMatrix image -> a
    java.util.List possibleCenters -> b
    boolean hasSkipped -> c
    int[] crossCheckStateCount -> d
    com.google.zxing.ResultPointCallback resultPointCallback -> e
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> a
    float centerFromEnd(int[],int) -> a
    boolean foundPatternCross(int[]) -> a
    int[] getCrossCheckStateCount() -> a
    float crossCheckVertical(int,int,int,int) -> a
    float crossCheckHorizontal(int,int,int,int) -> b
    boolean handlePossibleCenter(int[],int,int) -> a
    int findRowSkip() -> b
    boolean haveMultiplyConfirmedCenters() -> c
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> d
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.a.a.g.b.f:
    float average -> a
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.a.a.g.b.g:
    float average -> a
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.a.a.g.b.h:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> a
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> b
    com.google.zxing.qrcode.detector.FinderPattern topRight -> c
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> a
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> b
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> c
com.jayfang.dropdownmenu.DropDownMenu -> com.jayfang.dropdownmenu.DropDownMenu:
    java.util.List MenuAdapters -> b
    java.util.List MenuItems -> c
    java.lang.String[] menuItemPrefixs -> d
    java.util.List mTvMenuTitles -> e
    java.util.List mRlMenuBacks -> f
    java.util.List mIvMenuArrow -> g
    android.content.Context context -> h
    android.widget.PopupWindow mPopupWindow -> i
    android.widget.ListView mMenuList -> j
    com.jayfang.dropdownmenu.OnMenuSelectedListener MenuSelectedListener -> k
    int MenuCount -> l
    int ShowCount -> m
    int RowSelected -> n
    int ColumnSelected -> o
    int MenuTitleTextColor -> p
    int MenuTitleTextSize -> q
    int MenuPressedBackColor -> r
    int MenuBackColor -> s
    int MenuListTextSize -> t
    int MenuListTextColor -> u
    boolean showCheck -> v
    int CheckIcon -> w
    int UpArrow -> x
    int DownArrow -> y
    android.widget.TextView menuItemIndex -> z
    android.widget.ImageView menuBracketIndex -> A
    int[] firstMenuItemIndexs -> B
    android.view.View view -> a
    void init(android.content.Context) -> a
    void setMenuItems(java.util.List) -> setMenuItems
    void setMenuItemPrefixs(java.lang.String[]) -> setMenuItemPrefixs
    void setFirstMenuItem(int[]) -> setFirstMenuItem
    void setMenuCount(int) -> setMenuCount
    void setShowCount(int) -> setShowCount
    void setMenuTitleTextColor(int) -> setMenuTitleTextColor
    void setMenuTitleTextSize(int) -> setMenuTitleTextSize
    void setMenuBackColor(int) -> setMenuBackColor
    void setMenuPressedBackColor(int) -> setMenuPressedBackColor
    void setMenuListTextColor(int) -> setMenuListTextColor
    void setMenuListTextSize(int) -> setMenuListTextSize
    void setShowCheck(boolean) -> setShowCheck
    void setCheckIcon(int) -> setCheckIcon
    void setUpArrow(int) -> setUpArrow
    void setDownArrow(int) -> setDownArrow
    void setMenuSelectedListener(com.jayfang.dropdownmenu.OnMenuSelectedListener) -> setMenuSelectedListener
    void onDraw(android.graphics.Canvas) -> onDraw
    void setAttachView(android.view.View) -> setAttachView
    void shadowAnima(int) -> a
    android.widget.PopupWindow access$0(com.jayfang.dropdownmenu.DropDownMenu) -> a
    void access$1(com.jayfang.dropdownmenu.DropDownMenu,int) -> a
    java.util.List access$2(com.jayfang.dropdownmenu.DropDownMenu) -> b
    int access$3(com.jayfang.dropdownmenu.DropDownMenu) -> c
    java.lang.String[] access$4(com.jayfang.dropdownmenu.DropDownMenu) -> d
    java.util.List access$5(com.jayfang.dropdownmenu.DropDownMenu) -> e
    int access$6(com.jayfang.dropdownmenu.DropDownMenu) -> f
    java.util.List access$7(com.jayfang.dropdownmenu.DropDownMenu) -> g
    int access$8(com.jayfang.dropdownmenu.DropDownMenu) -> h
    java.util.List access$9(com.jayfang.dropdownmenu.DropDownMenu) -> i
    com.jayfang.dropdownmenu.OnMenuSelectedListener access$10(com.jayfang.dropdownmenu.DropDownMenu) -> j
    android.content.Context access$11(com.jayfang.dropdownmenu.DropDownMenu) -> k
    int access$12(com.jayfang.dropdownmenu.DropDownMenu) -> l
    java.util.List access$13(com.jayfang.dropdownmenu.DropDownMenu) -> m
    int access$14(com.jayfang.dropdownmenu.DropDownMenu) -> n
    android.widget.TextView access$15(com.jayfang.dropdownmenu.DropDownMenu) -> o
    android.widget.ImageView access$16(com.jayfang.dropdownmenu.DropDownMenu) -> p
    void access$17(com.jayfang.dropdownmenu.DropDownMenu,android.widget.TextView) -> a
    void access$18(com.jayfang.dropdownmenu.DropDownMenu,android.widget.ImageView) -> a
    android.widget.ListView access$19(com.jayfang.dropdownmenu.DropDownMenu) -> q
    int access$20(com.jayfang.dropdownmenu.DropDownMenu) -> r
    void access$21(com.jayfang.dropdownmenu.DropDownMenu,int) -> b
    int access$22(com.jayfang.dropdownmenu.DropDownMenu) -> s
    int access$23(com.jayfang.dropdownmenu.DropDownMenu) -> t
com.jayfang.dropdownmenu.DropDownMenu$1 -> com.jayfang.dropdownmenu.a:
    com.jayfang.dropdownmenu.DropDownMenu this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.jayfang.dropdownmenu.DropDownMenu$2 -> com.jayfang.dropdownmenu.b:
    com.jayfang.dropdownmenu.DropDownMenu this$0 -> a
    void onDismiss() -> onDismiss
com.jayfang.dropdownmenu.DropDownMenu$3 -> com.jayfang.dropdownmenu.c:
    com.jayfang.dropdownmenu.DropDownMenu this$0 -> a
    int val$index -> b
    android.widget.RelativeLayout val$v -> c
    void onClick(android.view.View) -> onClick
com.jayfang.dropdownmenu.MenuListAdapter -> com.jayfang.dropdownmenu.d:
    android.content.Context context -> a
    java.lang.String[] strs -> b
    int SelectIndex -> c
    int TextSize -> d
    int TextColor -> e
    boolean showCheck -> f
    int CheckIcon -> g
    void setSelectIndex(int) -> a
    void setShowCheck(boolean) -> a
    void setTextSize(int) -> b
    void setTextColor(int) -> c
    void setCheckIcon(int) -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.jayfang.dropdownmenu.OnMenuSelectedListener -> com.jayfang.dropdownmenu.e:
    void onSelected(android.view.View,int,int) -> a
com.tencent.mm.algorithm.MD5 -> com.tencent.mm.a.a:
    java.lang.String getMessageDigest(byte[]) -> a
com.tencent.mm.algorithm.TypeTransform -> com.tencent.mm.a.b:
    byte[] intToByteArrayLH(int) -> a
com.tencent.mm.sdk.Build -> com.tencent.mm.sdk.Build:
com.tencent.mm.sdk.BuildConfig -> com.tencent.mm.sdk.BuildConfig:
com.tencent.mm.sdk.ConstantsUI -> com.tencent.mm.sdk.ConstantsUI:
com.tencent.mm.sdk.ConstantsUI$Contact -> com.tencent.mm.sdk.ConstantsUI$Contact:
com.tencent.mm.sdk.MMAppMgr -> com.tencent.mm.sdk.MMAppMgr:
com.tencent.mm.sdk.MMSharedPreferences -> com.tencent.mm.sdk.MMSharedPreferences:
    android.content.ContentResolver i -> a
    java.lang.String[] columns -> b
    java.util.HashMap j -> c
    com.tencent.mm.sdk.MMSharedPreferences$REditor k -> d
    java.lang.Object getValue(java.lang.String) -> a
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.MMSharedPreferences$REditor -> com.tencent.mm.sdk.MMSharedPreferences$REditor:
    java.util.Map l -> a
    java.util.Set m -> b
    boolean n -> c
    android.content.ContentResolver i -> d
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.channel.ConstantsMMessage -> com.tencent.mm.sdk.channel.ConstantsMMessage:
com.tencent.mm.sdk.channel.MMessage -> com.tencent.mm.sdk.channel.MMessage:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void send(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.channel.MMessage$CallBack -> com.tencent.mm.sdk.channel.MMessage$CallBack:
    void handleMessage(android.content.Intent) -> a
com.tencent.mm.sdk.channel.MMessage$Receiver -> com.tencent.mm.sdk.channel.MMessage$Receiver:
    java.util.Map callbacks -> a
    com.tencent.mm.sdk.channel.MMessage$CallBack o -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.channel.MMessageAct -> com.tencent.mm.sdk.channel.MMessageAct:
    boolean send(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    boolean sendToWx(android.content.Context,java.lang.String,android.os.Bundle) -> a
com.tencent.mm.sdk.channel.MMessageUtil -> com.tencent.mm.sdk.channel.MMessageUtil:
    byte[] a(java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.channel.package-info -> com.tencent.mm.sdk.channel.package-info:
com.tencent.mm.sdk.contact.RContact -> com.tencent.mm.sdk.contact.RContact:
    java.lang.reflect.Field[] p -> a
    java.lang.String[] COLUMNS -> b
    java.lang.String field_username -> c
    java.lang.String field_alias -> d
    java.lang.String field_conRemark -> e
    java.lang.String field_domainList -> f
    java.lang.String field_nickname -> g
    java.lang.String field_pyInitial -> h
    java.lang.String field_quanPin -> i
    int field_showHead -> j
    int field_type -> k
    int field_weiboFlag -> l
    java.lang.String field_weiboNickname -> m
    java.lang.String field_conRemarkPYFull -> n
    java.lang.String field_conRemarkPYShort -> o
    int field_verifyFlag -> p
    int q -> r
    int r -> s
    java.lang.String s -> t
    long u -> u
    int h -> v
    java.lang.String v -> w
    java.lang.String w -> x
    int x -> y
    int y -> z
    java.lang.String z -> A
    java.lang.String A -> B
    int B -> C
    int C -> D
    java.lang.String D -> E
    java.lang.String E -> F
    java.lang.String F -> G
    java.lang.String G -> H
    int H -> I
    int I -> J
    java.lang.String J -> K
    java.lang.String K -> L
    java.lang.String L -> M
    java.util.Map M -> N
    java.util.Map N -> O
    void reset() -> a
com.tencent.mm.sdk.contact.RContactAvatar -> com.tencent.mm.sdk.contact.RContactAvatar:
com.tencent.mm.sdk.contact.RContactDB -> com.tencent.mm.sdk.contact.RContactDB:
    java.util.Map O -> a
com.tencent.mm.sdk.contact.RContactStorage -> com.tencent.mm.sdk.contact.RContactStorage:
com.tencent.mm.sdk.contact.package-info -> com.tencent.mm.sdk.contact.package-info:
com.tencent.mm.sdk.conversation.RConversation -> com.tencent.mm.sdk.conversation.RConversation:
    java.lang.reflect.Field[] p -> a
    java.lang.String[] COLUMNS -> b
com.tencent.mm.sdk.conversation.RConversationDB -> com.tencent.mm.sdk.conversation.RConversationDB:
    java.util.Map O -> a
com.tencent.mm.sdk.conversation.RConversationStorage -> com.tencent.mm.sdk.conversation.RConversationStorage:
com.tencent.mm.sdk.conversation.package-info -> com.tencent.mm.sdk.conversation.package-info:
com.tencent.mm.sdk.message.RMsgInfo -> com.tencent.mm.sdk.message.RMsgInfo:
    java.lang.reflect.Field[] p -> a
    java.lang.String[] COLUMNS -> b
    int field_type -> c
    int field_status -> d
    java.lang.String field_talker -> e
    java.lang.String field_content -> f
    java.lang.String field_imgPath -> g
    java.lang.String field_reserved -> h
    java.lang.String commentUrl -> i
com.tencent.mm.sdk.message.RMsgInfoDB -> com.tencent.mm.sdk.message.RMsgInfoDB:
    java.util.Map O -> a
com.tencent.mm.sdk.message.RMsgInfoStorage -> com.tencent.mm.sdk.message.RMsgInfoStorage:
com.tencent.mm.sdk.openapi.BaseReq -> com.tencent.mm.sdk.openapi.BaseReq:
    java.lang.String transaction -> a
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.BaseResp -> com.tencent.mm.sdk.openapi.BaseResp:
    int errCode -> a
    java.lang.String errStr -> b
    java.lang.String transaction -> c
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.BaseResp$ErrCode -> com.tencent.mm.sdk.openapi.BaseResp$ErrCode:
com.tencent.mm.sdk.openapi.ConstantsAPI -> com.tencent.mm.sdk.openapi.ConstantsAPI:
com.tencent.mm.sdk.openapi.GetMessageFromWX -> com.tencent.mm.sdk.openapi.GetMessageFromWX:
com.tencent.mm.sdk.openapi.GetMessageFromWX$Req -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Req:
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.GetMessageFromWX$Resp:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> d
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean isWXAppInstalled() -> a
    int getWXAppSupportAPI() -> b
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> a
com.tencent.mm.sdk.openapi.SendAuth -> com.tencent.mm.sdk.openapi.SendAuth:
com.tencent.mm.sdk.openapi.SendAuth$Req -> com.tencent.mm.sdk.openapi.SendAuth$Req:
    java.lang.String scope -> b
    java.lang.String state -> c
    int getType() -> a
    void fromBundle(android.os.Bundle) -> b
    void toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.SendAuth$Resp -> com.tencent.mm.sdk.openapi.SendAuth$Resp:
    java.lang.String userName -> d
    java.lang.String token -> e
    int expireDate -> f
    java.lang.String state -> g
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.SendMessageToWX -> com.tencent.mm.sdk.openapi.SendMessageToWX:
com.tencent.mm.sdk.openapi.SendMessageToWX$Req -> com.tencent.mm.sdk.openapi.SendMessageToWX$Req:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> b
    int scene -> c
    int getType() -> a
    void fromBundle(android.os.Bundle) -> b
    void toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.SendMessageToWX$Resp -> com.tencent.mm.sdk.openapi.SendMessageToWX$Resp:
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.ShowMessageFromWX -> com.tencent.mm.sdk.openapi.ShowMessageFromWX:
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.openapi.WXMediaMessage message -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.openapi.ShowMessageFromWX$Resp:
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    com.tencent.mm.sdk.openapi.WXAPIFactory Q -> a
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> a
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    android.content.Context R -> a
    java.lang.String S -> b
    boolean T -> c
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean isWXAppInstalled() -> a
    int getWXAppSupportAPI() -> b
    boolean sendReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    boolean a(java.lang.String) -> b
    boolean a(android.content.pm.Signature[]) -> a
    boolean a(byte[],byte[]) -> a
com.tencent.mm.sdk.openapi.WXAppExtendObject -> com.tencent.mm.sdk.openapi.WXAppExtendObject:
    java.lang.String extInfo -> a
    java.lang.String filePath -> b
    byte[] fileData -> c
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXAppLaunchData -> com.tencent.mm.sdk.openapi.WXAppLaunchData:
com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder -> com.tencent.mm.sdk.openapi.WXAppLaunchData$Builder:
com.tencent.mm.sdk.openapi.WXEmojiObject -> com.tencent.mm.sdk.openapi.WXEmojiObject:
    byte[] emojiData -> a
    java.lang.String emojiPath -> b
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXFileObject -> com.tencent.mm.sdk.openapi.WXFileObject:
    byte[] fileData -> a
    java.lang.String filePath -> b
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXImageObject -> com.tencent.mm.sdk.openapi.WXImageObject:
    byte[] imageData -> a
    java.lang.String imagePath -> b
    java.lang.String imageUrl -> c
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXMediaMessage -> com.tencent.mm.sdk.openapi.WXMediaMessage:
    int sdkVer -> a
    java.lang.String title -> b
    java.lang.String description -> c
    byte[] thumbData -> d
    com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject mediaObject -> e
    int getType() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXMediaMessage$Builder -> com.tencent.mm.sdk.openapi.WXMediaMessage$Builder:
    android.os.Bundle toBundle(com.tencent.mm.sdk.openapi.WXMediaMessage) -> a
    com.tencent.mm.sdk.openapi.WXMediaMessage fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject:
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXMusicObject -> com.tencent.mm.sdk.openapi.WXMusicObject:
    java.lang.String musicUrl -> a
    java.lang.String musicLowBandUrl -> b
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXTextObject -> com.tencent.mm.sdk.openapi.WXTextObject:
    java.lang.String text -> a
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXVideoObject -> com.tencent.mm.sdk.openapi.WXVideoObject:
    java.lang.String videoUrl -> a
    java.lang.String videoLowBandUrl -> b
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.WXWebpageObject -> com.tencent.mm.sdk.openapi.WXWebpageObject:
    java.lang.String webpageUrl -> a
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.openapi.package-info -> com.tencent.mm.sdk.openapi.package-info:
com.tencent.mm.sdk.package-info -> com.tencent.mm.sdk.package-info:
com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl21below:
com.tencent.mm.sdk.platformtools.AnimationHelperImpl22 -> com.tencent.mm.sdk.platformtools.AnimationHelperImpl22:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$AnimationHelper$IHelper:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$BitmapFactory:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$ExifHelper:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory:
com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll -> com.tencent.mm.sdk.platformtools.BackwardSupportUtil$SmoothScrollFactory$IScroll:
com.tencent.mm.sdk.platformtools.ChannelUtil -> com.tencent.mm.sdk.platformtools.ChannelUtil:
    int channelId -> a
    java.lang.String profileDeviceType -> b
    int updateMode -> c
    int buildRev -> d
    java.lang.String marketURL -> e
    boolean fullVersionInfo -> f
com.tencent.mm.sdk.platformtools.CharSequences -> com.tencent.mm.sdk.platformtools.CharSequences:
    java.lang.CharSequence forAsciiBytes(byte[],int,int) -> a
    void a(int,int,int) -> a
com.tencent.mm.sdk.platformtools.CharSequences$1 -> com.tencent.mm.sdk.platformtools.CharSequences$1:
    byte[] U -> a
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.CharSequences$2 -> com.tencent.mm.sdk.platformtools.CharSequences$2:
    byte[] U -> a
    int V -> b
    int W -> c
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    java.lang.String toString() -> toString
com.tencent.mm.sdk.platformtools.InetUtil -> com.tencent.mm.sdk.platformtools.InetUtil:
    java.util.regex.Pattern X -> a
    java.util.regex.Pattern Y -> b
    java.util.regex.Pattern Z -> c
com.tencent.mm.sdk.platformtools.KVConfig -> com.tencent.mm.sdk.platformtools.KVConfig:
    boolean aa -> a
com.tencent.mm.sdk.platformtools.LBSManager -> com.tencent.mm.sdk.platformtools.LBSManager:
    com.tencent.mm.sdk.platformtools.LBSManager$LocationCache ab -> e
    com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener ac -> f
    android.location.LocationManager ad -> g
    android.content.Context R -> h
    android.app.PendingIntent ae -> i
    boolean af -> j
    boolean ag -> a
    boolean ah -> b
    boolean ai -> c
    int aj -> d
    com.tencent.mm.sdk.platformtools.MTimerHandler ak -> k
    void start() -> a
    boolean isGpsEnable() -> b
    boolean isNetworkPrividerEnable() -> c
    void requestGpsUpdate() -> d
    void c() -> g
    java.lang.String getTelLocation() -> e
    java.lang.String getWIFILocation() -> f
    void setLocationCache(float,float,int,int) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(com.tencent.mm.sdk.platformtools.LBSManager) -> a
com.tencent.mm.sdk.platformtools.LBSManager$1 -> com.tencent.mm.sdk.platformtools.LBSManager$1:
    com.tencent.mm.sdk.platformtools.LBSManager al -> a
    boolean onTimerExpired() -> a
com.tencent.mm.sdk.platformtools.LBSManager$LocationCache -> com.tencent.mm.sdk.platformtools.LBSManager$LocationCache:
    float am -> a
    float an -> b
    int ao -> c
    long time -> d
    int I -> e
com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener -> com.tencent.mm.sdk.platformtools.LBSManager$OnLocationGotListener:
    void onLocationGot(float,float,int,int,java.lang.String,java.lang.String,boolean) -> a
com.tencent.mm.sdk.platformtools.LVBuffer -> com.tencent.mm.sdk.platformtools.LVBuffer:
com.tencent.mm.sdk.platformtools.LocaleUtil -> com.tencent.mm.sdk.platformtools.LocaleUtil:
com.tencent.mm.sdk.platformtools.Log -> com.tencent.mm.sdk.platformtools.Log:
    int level -> a
    java.io.PrintStream ar -> b
    byte[] as -> c
    java.lang.String at -> d
    void e(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> c
    void v(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.String,java.lang.Object[]) -> b
    void d(java.lang.String,java.lang.String,java.lang.Object[]) -> c
    void v(java.lang.String,java.lang.String,java.lang.Object[]) -> d
com.tencent.mm.sdk.platformtools.LogHelper -> com.tencent.mm.sdk.platformtools.LogHelper:
    byte[] au -> a
    void writeToStream(java.io.PrintStream,byte[],java.lang.String,java.lang.String) -> a
com.tencent.mm.sdk.platformtools.MAlarmHandler -> com.tencent.mm.sdk.platformtools.MAlarmHandler:
    int aw -> a
    java.util.Map aA -> b
    boolean aD -> c
    void finalize() -> finalize
    void stopTimer() -> a
com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack -> com.tencent.mm.sdk.platformtools.MAlarmHandler$CallBack:
com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper -> com.tencent.mm.sdk.platformtools.MAlarmHandler$IBumper:
com.tencent.mm.sdk.platformtools.MMApplicationContext -> com.tencent.mm.sdk.platformtools.MMApplicationContext:
    android.content.Context R -> a
    java.lang.String aE -> b
    java.lang.String getPackageName() -> a
com.tencent.mm.sdk.platformtools.MMEntryLock -> com.tencent.mm.sdk.platformtools.MMEntryLock:
    java.util.Set aF -> a
com.tencent.mm.sdk.platformtools.MTimerHandler -> com.tencent.mm.sdk.platformtools.MTimerHandler:
    int aw -> a
    boolean aG -> b
    long aH -> c
    com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack aI -> d
    void finalize() -> finalize
    void handleMessage(android.os.Message) -> handleMessage
    void startTimer(long) -> a
    void stopTimer() -> a
com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack -> com.tencent.mm.sdk.platformtools.MTimerHandler$CallBack:
    boolean onTimerExpired() -> a
com.tencent.mm.sdk.platformtools.NetStatusUtil -> com.tencent.mm.sdk.platformtools.NetStatusUtil:
com.tencent.mm.sdk.platformtools.PhoneUtil -> com.tencent.mm.sdk.platformtools.PhoneUtil:
    int aJ -> a
    java.lang.String getMacXml(java.util.List) -> a
    java.lang.String getCellXml(java.util.List) -> b
    java.util.List getCellInfoList(android.content.Context) -> a
com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$CellInfo:
    java.lang.String mcc -> a
    java.lang.String mnc -> b
    java.lang.String lac -> c
    java.lang.String cellid -> d
    java.lang.String type -> e
    java.lang.String stationId -> f
    java.lang.String networkId -> g
    java.lang.String systemId -> h
    java.lang.String dbm -> i
com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo -> com.tencent.mm.sdk.platformtools.PhoneUtil$MacInfo:
    java.lang.String mac -> a
    java.lang.String dbm -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl:
    int aK -> a
    int aL -> b
    android.telephony.TelephonyManager aM -> c
    android.telephony.PhoneStateListener aN -> d
    java.util.List getCellInfoList(android.content.Context) -> a
    int b(int) -> a
    android.telephony.TelephonyManager a(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> a
    android.telephony.PhoneStateListener b(com.tencent.mm.sdk.platformtools.PhoneUtil16Impl) -> b
com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil16Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil16Impl aO -> a
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl:
    int aK -> a
    int aL -> b
    android.telephony.TelephonyManager aM -> c
    int aP -> d
    android.telephony.PhoneStateListener aN -> e
    java.util.List getCellInfoList(android.content.Context) -> a
    int a(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> a
    int c(int) -> a
    android.telephony.TelephonyManager b(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> b
    android.telephony.PhoneStateListener c(com.tencent.mm.sdk.platformtools.PhoneUtil20Impl) -> c
com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1 -> com.tencent.mm.sdk.platformtools.PhoneUtil20Impl$1:
    com.tencent.mm.sdk.platformtools.PhoneUtil20Impl aQ -> a
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.tencent.mm.sdk.platformtools.SensorController -> com.tencent.mm.sdk.platformtools.SensorController:
    float aR -> a
    float aT -> b
    float aU -> c
    com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack aV -> d
    boolean aY -> e
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack -> com.tencent.mm.sdk.platformtools.SensorController$SensorEventCallBack:
    void onSensorEvent(boolean) -> a
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition21below:
com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22 -> com.tencent.mm.sdk.platformtools.SmoothScrollToPosition22:
com.tencent.mm.sdk.platformtools.SyncTask -> com.tencent.mm.sdk.platformtools.SyncTask:
    java.lang.Object result -> a
    java.lang.Object lock -> b
    long ba -> c
    long bb -> d
    long bc -> e
    java.lang.Runnable bd -> f
    void setResult(java.lang.Object) -> a
    java.lang.Object run() -> a
    long a(com.tencent.mm.sdk.platformtools.SyncTask,long) -> a
    long a(com.tencent.mm.sdk.platformtools.SyncTask) -> a
com.tencent.mm.sdk.platformtools.SyncTask$1 -> com.tencent.mm.sdk.platformtools.SyncTask$1:
    com.tencent.mm.sdk.platformtools.SyncTask be -> a
    void run() -> run
com.tencent.mm.sdk.platformtools.SystemProperty -> com.tencent.mm.sdk.platformtools.SystemProperty:
    java.util.HashMap bf -> a
com.tencent.mm.sdk.platformtools.TimeLogger -> com.tencent.mm.sdk.platformtools.TimeLogger:
com.tencent.mm.sdk.platformtools.TrafficStats -> com.tencent.mm.sdk.platformtools.TrafficStats:
com.tencent.mm.sdk.platformtools.Util -> com.tencent.mm.sdk.platformtools.Util:
    long[] bt -> a
    java.util.TimeZone GMT -> b
    char[] bu -> c
    char[] bv -> d
    java.lang.String[] bw -> e
    long ticksToNow(long) -> a
    java.lang.String nullAsNil(java.lang.String) -> a
    boolean isNullOrNil(java.lang.String) -> b
    boolean isNullOrNil(byte[]) -> a
com.tencent.mm.sdk.platformtools.Util$1 -> com.tencent.mm.sdk.platformtools.Util$1:
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.tencent.mm.sdk.platformtools.Util$2 -> com.tencent.mm.sdk.platformtools.Util$2:
    android.view.View bx -> a
    android.view.View by -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tencent.mm.sdk.platformtools.package-info -> com.tencent.mm.sdk.platformtools.package-info:
com.tencent.mm.sdk.plugin.IMMPluginAPI -> com.tencent.mm.sdk.plugin.IMMPluginAPI:
com.tencent.mm.sdk.plugin.MMPluginAPIImpl -> com.tencent.mm.sdk.plugin.MMPluginAPIImpl:
    java.lang.String[] columns -> a
com.tencent.mm.sdk.plugin.MMPluginMsg -> com.tencent.mm.sdk.plugin.MMPluginMsg:
com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper -> com.tencent.mm.sdk.plugin.MMPluginMsg$ReceiverHelper:
com.tencent.mm.sdk.plugin.MMPluginOAuth -> com.tencent.mm.sdk.plugin.MMPluginOAuth:
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult bA -> a
    java.lang.String bB -> b
    java.lang.String bC -> c
    java.lang.String a(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
    void a(com.tencent.mm.sdk.plugin.MMPluginOAuth,java.lang.String) -> a
    com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult b(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> b
com.tencent.mm.sdk.plugin.MMPluginOAuth$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bD -> a
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult -> com.tencent.mm.sdk.plugin.MMPluginOAuth$IResult:
    void onResult(com.tencent.mm.sdk.plugin.MMPluginOAuth) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver:
    java.util.Map aA -> a
    com.tencent.mm.sdk.plugin.MMPluginOAuth bE -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void unregister(java.lang.String) -> a
com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1 -> com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver$1:
    com.tencent.mm.sdk.plugin.MMPluginOAuth bF -> a
    java.lang.String bG -> b
    com.tencent.mm.sdk.plugin.MMPluginOAuth$Receiver bH -> c
    void run() -> run
com.tencent.mm.sdk.plugin.MMPluginProviderConstants -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants:
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$OAuth:
    android.net.Uri CONTENT_URI -> a
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginDB:
    android.net.Uri CONTENT_URI -> a
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$PluginIntent:
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$Resolver:
    int getType(java.lang.Object) -> a
    boolean unresolveObj(android.content.ContentValues,java.lang.Object) -> a
    java.lang.Object resolveObj(int,java.lang.String) -> a
com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref -> com.tencent.mm.sdk.plugin.MMPluginProviderConstants$SharedPref:
    android.net.Uri CONTENT_URI -> a
com.tencent.mm.sdk.plugin.MMPluginUtil -> com.tencent.mm.sdk.plugin.MMPluginUtil:
com.tencent.mm.sdk.plugin.Profile -> com.tencent.mm.sdk.plugin.Profile:
    java.lang.reflect.Field[] p -> c
    android.net.Uri CONTENT_URI -> a
    java.lang.String[] columns -> b
com.tencent.mm.sdk.plugin.package-info -> com.tencent.mm.sdk.plugin.package-info:
com.tencent.mm.sdk.storage.ContentProviderDB -> com.tencent.mm.sdk.storage.ContentProviderDB:
com.tencent.mm.sdk.storage.CursorFieldHelper -> com.tencent.mm.sdk.storage.CursorFieldHelper:
    java.util.Map bI -> a
    java.util.Map bJ -> b
    java.util.Map bK -> c
com.tencent.mm.sdk.storage.ISQLiteDatabase -> com.tencent.mm.sdk.storage.ISQLiteDatabase:
com.tencent.mm.sdk.storage.MAutoDBItem -> com.tencent.mm.sdk.storage.MAutoDBItem:
    long systemRowid -> q
    java.lang.reflect.Field[] getValidFields(java.lang.Class) -> a
    java.lang.String[] getFullColumns(java.lang.reflect.Field[]) -> a
com.tencent.mm.sdk.storage.MAutoStorage -> com.tencent.mm.sdk.storage.MAutoStorage:
com.tencent.mm.sdk.storage.MDBItem -> com.tencent.mm.sdk.storage.MDBItem:
com.tencent.mm.sdk.storage.MStorage -> com.tencent.mm.sdk.storage.MStorage:
    com.tencent.mm.sdk.storage.MStorageEvent bM -> a
    com.tencent.mm.sdk.storage.MStorageEvent bN -> b
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageChange,java.lang.String) -> a
    void a(com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded) -> a
com.tencent.mm.sdk.storage.MStorage$1 -> com.tencent.mm.sdk.storage.MStorage$1:
    com.tencent.mm.sdk.storage.MStorage bO -> a
    void processEvent(java.lang.Object,java.lang.Object) -> a
com.tencent.mm.sdk.storage.MStorage$2 -> com.tencent.mm.sdk.storage.MStorage$2:
    com.tencent.mm.sdk.storage.MStorage bO -> a
    void processEvent(java.lang.Object,java.lang.Object) -> a
com.tencent.mm.sdk.storage.MStorage$IOnStorageChange -> com.tencent.mm.sdk.storage.MStorage$IOnStorageChange:
    void onNotifyChange(java.lang.String) -> a
com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded -> com.tencent.mm.sdk.storage.MStorage$IOnStorageLoaded:
    void onNotifyLoaded() -> a
com.tencent.mm.sdk.storage.MStorageEvent -> com.tencent.mm.sdk.storage.MStorageEvent:
    int bP -> a
    java.util.Hashtable bQ -> b
    java.util.concurrent.CopyOnWriteArraySet bR -> c
    void processEvent(java.lang.Object,java.lang.Object) -> a
com.tencent.mm.sdk.storage.MStorageEvent$1 -> com.tencent.mm.sdk.storage.MStorageEvent$1:
    java.lang.Object bS -> a
    java.lang.Object bT -> b
    com.tencent.mm.sdk.storage.MStorageEvent bU -> c
    void run() -> run
com.tencent.mm.sdk.storage.package-info -> com.tencent.mm.sdk.storage.package-info:
fjfxyy.serialnumber.ui.CaptureActivity -> fjfxyy.serialnumber.ui.CaptureActivity:
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler handler -> c
    xx.fjnuit.QRCodeDecoder.ViewfinderView viewfinderView -> d
    boolean hasSurface -> e
    java.util.Vector decodeFormats -> f
    java.lang.String characterSet -> g
    android.widget.TextView txtResult -> h
    xx.fjnuit.QRCodeDecoder.InactivityTimer inactivityTimer -> i
    android.media.MediaPlayer mediaPlayer -> j
    boolean playBeep -> k
    boolean vibrate -> l
    android.view.SurfaceView surfaceView -> a
    android.view.SurfaceHolder surfaceHolder -> b
    android.media.MediaPlayer$OnCompletionListener beepListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initCamera(android.view.SurfaceHolder) -> a
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    xx.fjnuit.QRCodeDecoder.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    void drawViewfinder() -> c
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void initBeepSound() -> d
fjfxyy.serialnumber.ui.CaptureActivity$1 -> fjfxyy.serialnumber.ui.a:
    fjfxyy.serialnumber.ui.CaptureActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
fjfxyy.serialnumber.util.BASE64Encoder -> fjfxyy.serialnumber.a.a:
    char[] pem_array -> b
    int bytesPerAtom() -> a
    int bytesPerLine() -> b
    void encodeAtom(java.io.OutputStream,byte[],int,int) -> a
fjfxyy.serialnumber.util.CharacterEncoder -> fjfxyy.serialnumber.a.b:
    java.io.PrintStream pStream -> a
    int bytesPerAtom() -> a
    int bytesPerLine() -> b
    void encodeBufferPrefix(java.io.OutputStream) -> a
    void encodeBufferSuffix(java.io.OutputStream) -> b
    void encodeLinePrefix(java.io.OutputStream,int) -> a
    void encodeLineSuffix(java.io.OutputStream) -> c
    void encodeAtom(java.io.OutputStream,byte[],int,int) -> a
    int readFully(java.io.InputStream,byte[]) -> a
    void encode(java.io.InputStream,java.io.OutputStream) -> a
    java.lang.String encode(byte[]) -> a
fjfxyy.serialnumber.util.WebServiceHelper -> fjfxyy.serialnumber.a.c:
    java.lang.String TAG -> a
    java.lang.String targetNameSpace -> b
    java.lang.String Serialnumber_Insert -> c
    java.lang.String Ckeck_Number -> d
    java.lang.String getSystemTime -> e
    java.lang.String Service_DeleteFile -> f
    java.lang.String Service_Serial_Rapair -> g
    java.lang.String WSDL -> h
    java.lang.String getFilePDFName -> i
    java.lang.String xuliehaoString -> j
    java.lang.String getFileName -> k
    java.lang.String dianziqin -> l
    java.lang.String is_not_registered -> m
    java.lang.String checkUserName -> n
    java.lang.String uploadResume -> o
    java.lang.String uploadUserData -> p
    java.lang.String uploadFile -> q
    java.lang.String readTXT -> r
    java.lang.String checkFileExit -> s
    java.lang.String UPLOAD_GAMECOMPETITION_DTAT_METHOD -> x
    java.lang.String SEARCH_GAMECOMPETITION_DATA_METHOD -> y
    java.lang.String CHECK_SCHOOL_CODE_METHOD -> z
    java.lang.String CHECK_SCHOOL_NAME_METHOD -> A
    java.lang.String readUserData_CreatePositionXml -> B
    int timeout -> t
    java.lang.String CustomSoftSerialnumber_Insert_V10 -> u
    java.lang.String CustomSoftCkeck_Number -> v
    java.lang.String CustomSoftSerial_Rapair_V10 -> w
fxyy.klr.gradingtestassist.AppConst -> fxyy.klr.gradingtestassist.a:
    int ENV -> a
    java.lang.String APP_FOLDER -> b
    java.lang.String LOG_FOLDER -> c
    java.lang.String DB_FOLDER -> d
    java.lang.String SIGNATURE_FOLDER -> e
    java.lang.String SHARE_PHOTO_FOLDER -> f
    java.lang.String NETWORK_IP -> g
    java.lang.String NETWORK_DATA -> h
    java.lang.String loginuId -> i
    java.lang.String loginAcc -> j
    java.lang.String loginName -> k
    java.lang.String tcName -> l
    int loginType -> m
    boolean hasWiFi -> n
    int APP_NEW_VERSION -> o
    java.util.List validateApis -> p
fxyy.klr.gradingtestassist.BaseApplication -> fxyy.klr.gradingtestassist.BaseApplication:
    java.lang.String TAG -> a
    android.content.Intent serviceIntent -> b
    fxyy.klr.gradingtestassist.BaseApplication$SdcardStateChanageReceiver sdReceiver -> c
    android.content.ServiceConnection conn -> d
    java.lang.String dbPath -> e
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
    void waitForSDcard() -> a
    void initNetworkService() -> b
    void access$0(fxyy.klr.gradingtestassist.BaseApplication) -> a
fxyy.klr.gradingtestassist.BaseApplication$1 -> fxyy.klr.gradingtestassist.b:
    fxyy.klr.gradingtestassist.BaseApplication this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
fxyy.klr.gradingtestassist.BaseApplication$SdcardStateChanageReceiver -> fxyy.klr.gradingtestassist.c:
    fxyy.klr.gradingtestassist.BaseApplication this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.activity.BaseActivity -> fxyy.klr.gradingtestassist.activity.a:
    java.lang.String TAG -> a
    android.content.Context curContext -> b
    android.content.SharedPreferences userInfoShares -> c
    android.os.Handler handler -> d
    android.content.BroadcastReceiver exitReceiver -> f
    android.content.BroadcastReceiver mReceiver -> g
    android.content.BroadcastReceiver offlineReceiver -> h
    android.content.BroadcastReceiver signatureReceiver -> i
    android.app.Dialog offlineDialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    void showOfflineDilaog(int) -> a
    java.lang.String toString() -> toString
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void finish() -> finish
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void access$0(fxyy.klr.gradingtestassist.activity.BaseActivity,int) -> a
fxyy.klr.gradingtestassist.activity.BaseActivity$1 -> fxyy.klr.gradingtestassist.activity.b:
    fxyy.klr.gradingtestassist.activity.BaseActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.activity.BaseActivity$2 -> fxyy.klr.gradingtestassist.activity.c:
    fxyy.klr.gradingtestassist.activity.BaseActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.activity.BaseActivity$3 -> fxyy.klr.gradingtestassist.activity.d:
    fxyy.klr.gradingtestassist.activity.BaseActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.activity.BaseActivity$4 -> fxyy.klr.gradingtestassist.activity.e:
    fxyy.klr.gradingtestassist.activity.BaseActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.activity.BaseActivity$5 -> fxyy.klr.gradingtestassist.activity.f:
    fxyy.klr.gradingtestassist.activity.BaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.GradingTestActivity -> fxyy.klr.gradingtestassist.activity.GradingTestActivity:
    java.lang.String TAG -> u
    fxyy.klr.gradingtestassist.view.XScrollView scrollView -> f
    android.widget.TextView topTitleView -> v
    android.widget.TextView topTitleView_hide -> w
    android.widget.TextView topButton -> x
    android.widget.TextView bannerView -> g
    android.view.animation.AlphaAnimation anim -> h
    fxyy.klr.gradingtestassist.fragment.BaseFragment fragment -> i
    boolean change -> j
    android.view.animation.TranslateAnimation ta_topout_1 -> k
    android.view.animation.TranslateAnimation ta_bottomin_1 -> l
    android.view.animation.TranslateAnimation ta_topin_2 -> m
    android.view.animation.TranslateAnimation ta_bottomout_2 -> n
    android.view.animation.TranslateAnimation ta_banner_in -> o
    android.view.animation.TranslateAnimation ta_banner_out -> p
    fxyy.klr.gradingtestassist.model.Examinee curExaminee -> q
    int fromsState -> r
    boolean subimtBtnClick -> s
    android.app.Dialog submitDialog -> t
    void onCreate(android.os.Bundle) -> onCreate
    void showSubmitDialog(fxyy.klr.gradingtestassist.model.Examinee,java.lang.String,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void showBanner() -> a
    void hideBanner() -> b
    void onDestroy() -> onDestroy
    android.widget.TextView access$0(fxyy.klr.gradingtestassist.activity.GradingTestActivity) -> a
    android.widget.TextView access$1(fxyy.klr.gradingtestassist.activity.GradingTestActivity) -> b
fxyy.klr.gradingtestassist.activity.GradingTestActivity$1 -> fxyy.klr.gradingtestassist.activity.g:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    fxyy.klr.gradingtestassist.activity.GradingTestActivity access$0(fxyy.klr.gradingtestassist.activity.GradingTestActivity$1) -> a
fxyy.klr.gradingtestassist.activity.GradingTestActivity$1$1 -> fxyy.klr.gradingtestassist.activity.h:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity$1 this$1 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.GradingTestActivity$2 -> fxyy.klr.gradingtestassist.activity.i:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
fxyy.klr.gradingtestassist.activity.GradingTestActivity$3 -> fxyy.klr.gradingtestassist.activity.j:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity this$0 -> a
    void onScroll(android.widget.ScrollView,int) -> a
fxyy.klr.gradingtestassist.activity.GradingTestActivity$4 -> fxyy.klr.gradingtestassist.activity.k:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.GradingTestActivity$5 -> fxyy.klr.gradingtestassist.activity.l:
    fxyy.klr.gradingtestassist.activity.GradingTestActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity -> fxyy.klr.gradingtestassist.activity.LoginActivity:
    android.widget.CheckBox remenberPwdBox -> f
    android.widget.EditText accountBox -> g
    android.widget.EditText pwdBox -> h
    android.widget.ImageView clearAccBox -> i
    android.widget.ImageView clearPwdBox -> j
    android.widget.ImageView pwdEye -> k
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice kWebservice -> l
    fxyy.klr.gradingtestassist.model.Loginer loginer -> m
    boolean reValidate -> n
    android.app.Dialog tipDialog -> s
    android.app.Dialog banDialog -> t
    android.content.ServiceConnection sConn -> o
    java.lang.String[] testAccounts -> p
    boolean killself -> q
    java.lang.String InvigilatorLogin -> r
    void onCreate(android.os.Bundle) -> onCreate
    void testAccountDialog() -> a
    void signinApp(android.view.View) -> signinApp
    void requestLogin(java.lang.String) -> a
    void clearAccount(android.view.View) -> clearAccount
    void clearPwd(android.view.View) -> clearPwd
    void onDestroy() -> onDestroy
    android.app.Dialog access$0(fxyy.klr.gradingtestassist.activity.LoginActivity) -> a
    void access$1(fxyy.klr.gradingtestassist.activity.LoginActivity,java.lang.String) -> a
    android.app.Dialog access$2(fxyy.klr.gradingtestassist.activity.LoginActivity) -> b
fxyy.klr.gradingtestassist.activity.LoginActivity$1 -> fxyy.klr.gradingtestassist.activity.m:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
fxyy.klr.gradingtestassist.activity.LoginActivity$10 -> fxyy.klr.gradingtestassist.activity.n:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.LoginActivity$11 -> fxyy.klr.gradingtestassist.activity.o:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$12 -> fxyy.klr.gradingtestassist.activity.p:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$13 -> fxyy.klr.gradingtestassist.activity.q:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void callback(java.lang.String,java.lang.String,int) -> a
fxyy.klr.gradingtestassist.activity.LoginActivity$2 -> fxyy.klr.gradingtestassist.activity.r:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$3 -> fxyy.klr.gradingtestassist.activity.s:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$4 -> fxyy.klr.gradingtestassist.activity.t:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$5 -> fxyy.klr.gradingtestassist.activity.u:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$6 -> fxyy.klr.gradingtestassist.activity.v:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.LoginActivity$7 -> fxyy.klr.gradingtestassist.activity.w:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
fxyy.klr.gradingtestassist.activity.LoginActivity$8 -> fxyy.klr.gradingtestassist.activity.x:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
fxyy.klr.gradingtestassist.activity.LoginActivity$9 -> fxyy.klr.gradingtestassist.activity.y:
    fxyy.klr.gradingtestassist.activity.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
fxyy.klr.gradingtestassist.activity.MainActivity -> fxyy.klr.gradingtestassist.activity.MainActivity:
    android.widget.ImageView bottomView1 -> f
    android.widget.ImageView bottomView2 -> g
    android.widget.ImageView bottomView3 -> h
    android.widget.ImageView bottomView4 -> i
    android.widget.ImageView bottomView -> j
    android.widget.TextView fragmentTitle -> k
    int[] textId -> l
    java.util.ArrayList fragments -> m
    android.app.Dialog exitDialog -> q
    android.app.Fragment curFragment -> n
    java.lang.String[] fragmentTag -> o
    android.content.ServiceConnection sConn -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
    void gotoOfflineList() -> a
    void showUpdateDialog(java.lang.String,boolean) -> a
    android.app.Dialog access$0(fxyy.klr.gradingtestassist.activity.MainActivity) -> a
fxyy.klr.gradingtestassist.activity.MainActivity$1 -> fxyy.klr.gradingtestassist.activity.z:
    fxyy.klr.gradingtestassist.activity.MainActivity this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
fxyy.klr.gradingtestassist.activity.MainActivity$2 -> fxyy.klr.gradingtestassist.activity.aa:
    fxyy.klr.gradingtestassist.activity.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.MainActivity$3 -> fxyy.klr.gradingtestassist.activity.ab:
    fxyy.klr.gradingtestassist.activity.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.MainActivity$3$1 -> fxyy.klr.gradingtestassist.activity.ac:
    fxyy.klr.gradingtestassist.activity.MainActivity$3 this$1 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.MainActivity$4 -> fxyy.klr.gradingtestassist.activity.ad:
    fxyy.klr.gradingtestassist.activity.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    boolean val$force -> c
    java.lang.String val$download_url -> d
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.MainActivity$5 -> fxyy.klr.gradingtestassist.activity.ae:
    fxyy.klr.gradingtestassist.activity.MainActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    java.lang.String val$download_url -> c
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.ModifyPwdActivity -> fxyy.klr.gradingtestassist.activity.ModifyPwdActivity:
    java.lang.String TAG -> f
    android.widget.EditText et_old -> i
    android.widget.EditText et_new -> j
    android.widget.EditText et_confirm -> k
    android.widget.EditText et_code -> l
    android.widget.ImageView iv_code -> m
    java.lang.String identifyCode -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void refreshCode() -> a
    void requestModify(java.util.Map) -> a
    android.widget.EditText access$0(fxyy.klr.gradingtestassist.activity.ModifyPwdActivity) -> a
    android.widget.EditText access$1(fxyy.klr.gradingtestassist.activity.ModifyPwdActivity) -> b
    android.widget.EditText access$2(fxyy.klr.gradingtestassist.activity.ModifyPwdActivity) -> c
    android.widget.EditText access$3(fxyy.klr.gradingtestassist.activity.ModifyPwdActivity) -> d
fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$1 -> fxyy.klr.gradingtestassist.activity.af:
    fxyy.klr.gradingtestassist.activity.ModifyPwdActivity this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$2 -> fxyy.klr.gradingtestassist.activity.ag:
    fxyy.klr.gradingtestassist.activity.ModifyPwdActivity this$0 -> a
    void callback(java.lang.String,java.lang.String,int) -> a
    fxyy.klr.gradingtestassist.activity.ModifyPwdActivity access$0(fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$2) -> a
fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$2$1 -> fxyy.klr.gradingtestassist.activity.ah:
    fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$2 this$1 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.ModifyPwdActivity$MyTextWatcher -> fxyy.klr.gradingtestassist.activity.ai:
    android.view.View view -> a
    fxyy.klr.gradingtestassist.activity.ModifyPwdActivity this$0 -> b
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
fxyy.klr.gradingtestassist.activity.R -> fxyy.klr.gradingtestassist.activity.aj:
fxyy.klr.gradingtestassist.activity.R$styleable -> fxyy.klr.gradingtestassist.activity.ak:
    int[] NestRadioGroup -> NestRadioGroup
    int NestRadioGroup_checkedButton -> NestRadioGroup_checkedButton
fxyy.klr.gradingtestassist.activity.SharesActivity -> fxyy.klr.gradingtestassist.activity.al:
    java.lang.String[] shareList -> f
    com.tencent.mm.sdk.openapi.IWXAPI weixin -> g
    com.tencent.mm.sdk.openapi.WXMediaMessage wxMsg -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.openapi.BaseReq) -> a
    void onResp(com.tencent.mm.sdk.openapi.BaseResp) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void shareToWX_friend() -> a
    void shareToWX_timeline() -> b
    java.lang.String buildTransaction(java.lang.String) -> a
fxyy.klr.gradingtestassist.activity.SharesActivity$ShareAdapter -> fxyy.klr.gradingtestassist.activity.am:
    fxyy.klr.gradingtestassist.activity.SharesActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    fxyy.klr.gradingtestassist.activity.SharesActivity access$0(fxyy.klr.gradingtestassist.activity.SharesActivity$ShareAdapter) -> a
fxyy.klr.gradingtestassist.activity.SharesActivity$ShareAdapter$1 -> fxyy.klr.gradingtestassist.activity.an:
    fxyy.klr.gradingtestassist.activity.SharesActivity$ShareAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.SharesActivity$ViewHolder -> fxyy.klr.gradingtestassist.activity.ao:
    android.widget.TextView itemText -> a
    android.widget.ImageView itemIcon -> b
    android.widget.ImageView itemNewtip -> c
    fxyy.klr.gradingtestassist.view.ClickRelativeLayout itemLayout -> d
    fxyy.klr.gradingtestassist.activity.SharesActivity this$0 -> e
fxyy.klr.gradingtestassist.activity.SignatureActivity -> fxyy.klr.gradingtestassist.activity.SignatureActivity:
    fxyy.klr.gradingtestassist.view.FingerPaintView paintView -> f
    android.app.Dialog signatureDialog -> g
    java.lang.String TAG -> h
    fxyy.klr.gradingtestassist.service.NetworkStateService nss -> i
    android.content.ServiceConnection sConn -> j
    void onCreate(android.os.Bundle) -> onCreate
    void signatureSubmit(android.view.View) -> signatureSubmit
    void onBackPressed() -> onBackPressed
    void signatureRestore(android.view.View) -> signatureRestore
    void onDestroy() -> onDestroy
fxyy.klr.gradingtestassist.activity.SignatureActivity$1 -> fxyy.klr.gradingtestassist.activity.ap:
    fxyy.klr.gradingtestassist.activity.SignatureActivity this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
fxyy.klr.gradingtestassist.activity.SignatureActivity$2 -> fxyy.klr.gradingtestassist.activity.aq:
    fxyy.klr.gradingtestassist.activity.SignatureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.SignatureActivity$3 -> fxyy.klr.gradingtestassist.activity.ar:
    fxyy.klr.gradingtestassist.activity.SignatureActivity this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.SignatureActivity$4 -> fxyy.klr.gradingtestassist.activity.as:
    fxyy.klr.gradingtestassist.activity.SignatureActivity this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.UsualSentencesActivity -> fxyy.klr.gradingtestassist.activity.UsualSentencesActivity:
    java.lang.String selectText -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelClick(android.view.View) -> cancelClick
    void finish() -> finish
fxyy.klr.gradingtestassist.activity.WelcomeActivity -> fxyy.klr.gradingtestassist.activity.WelcomeActivity:
    java.lang.String TAG -> f
    android.os.Handler handler -> g
    fxyy.klr.gradingtestassist.model.Loginer loginer -> h
    java.lang.String downloadUrl -> i
    fxyy.klr.gradingtestassist.service.BeeCallBack bee -> j
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice service -> k
    fxyy.klr.gradingtestassist.activity.WelcomeActivity$SdcardStateChanageReceiver sdReceiver -> l
    fxyy.klr.gradingtestassist.view.MyProgressDialog waitForDilaog -> m
    void onCreate(android.os.Bundle) -> onCreate
    void requestUpdate() -> a
    void requestLogin() -> d
    void loginClick(android.view.View) -> loginClick
    void forceUpdateDialog(java.lang.String) -> a
    void banDialog() -> b
    void waitforSDcard() -> c
    void access$0(fxyy.klr.gradingtestassist.activity.WelcomeActivity) -> a
fxyy.klr.gradingtestassist.activity.WelcomeActivity$1 -> fxyy.klr.gradingtestassist.activity.at:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    void callback(java.lang.String,java.lang.String,int) -> a
fxyy.klr.gradingtestassist.activity.WelcomeActivity$2 -> fxyy.klr.gradingtestassist.activity.au:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.activity.WelcomeActivity$3 -> fxyy.klr.gradingtestassist.activity.av:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    void callback(java.lang.String,java.lang.String,int) -> a
fxyy.klr.gradingtestassist.activity.WelcomeActivity$4 -> fxyy.klr.gradingtestassist.activity.aw:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    fxyy.klr.gradingtestassist.view.MyProgressDialog val$mPro -> b
    fxyy.klr.gradingtestassist.service.BeeCallBack val$bee -> c
    void run() -> run
fxyy.klr.gradingtestassist.activity.WelcomeActivity$5 -> fxyy.klr.gradingtestassist.activity.ax:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    java.lang.String val$download_url -> c
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.WelcomeActivity$6 -> fxyy.klr.gradingtestassist.activity.ay:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.activity.WelcomeActivity$SdcardStateChanageReceiver -> fxyy.klr.gradingtestassist.activity.az:
    fxyy.klr.gradingtestassist.activity.WelcomeActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater -> fxyy.klr.gradingtestassist.a.a:
    android.content.Context context -> a
    java.util.ArrayList coll -> b
    int tab -> c
    void updateListView(java.util.List,int) -> a
    int getCount() -> getCount
    fxyy.klr.gradingtestassist.model.Examinee getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater$1 -> fxyy.klr.gradingtestassist.a.b:
    fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater$UpLoadButtonClick -> fxyy.klr.gradingtestassist.a.c:
    fxyy.klr.gradingtestassist.model.Examinee examinee -> a
    fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater this$0 -> b
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater$ViewHolder -> fxyy.klr.gradingtestassist.a.d:
    android.widget.TextView name -> a
    android.widget.TextView subject -> b
    android.widget.TextView grade_profission -> c
    android.widget.TextView grade_basic -> d
    android.widget.LinearLayout itemLayout -> e
    android.widget.RelativeLayout uploadLayout -> f
    android.widget.ProgressBar uploadBar -> g
    android.widget.TextView uploadBtn -> h
    fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater this$0 -> i
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter -> fxyy.klr.gradingtestassist.a.e:
    android.content.Context context -> a
    int[] textIds -> b
    int[] iconIds -> c
    java.util.ArrayList flags -> d
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice mWebservice -> e
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Integer getItem(int) -> a
    long getItemId(int) -> getItemId
    void checkUpdate() -> a
    void showUpdateDialog(java.lang.String,boolean) -> a
    java.lang.Object getItem(int) -> getItem
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter$1 -> fxyy.klr.gradingtestassist.a.f:
    fxyy.klr.gradingtestassist.adapter.SettingItemAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter$2 -> fxyy.klr.gradingtestassist.a.g:
    fxyy.klr.gradingtestassist.adapter.SettingItemAdapter this$0 -> a
    void callback(java.lang.String,java.lang.String,int) -> a
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter$3 -> fxyy.klr.gradingtestassist.a.h:
    fxyy.klr.gradingtestassist.adapter.SettingItemAdapter this$0 -> a
    android.app.Dialog val$dialog -> b
    boolean val$force -> c
    java.lang.String val$download_url -> d
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter$4 -> fxyy.klr.gradingtestassist.a.i:
    fxyy.klr.gradingtestassist.adapter.SettingItemAdapter this$0 -> a
    android.app.Dialog val$dialog -> b
    java.lang.String val$download_url -> c
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.adapter.SettingItemAdapter$ViewHolder -> fxyy.klr.gradingtestassist.a.j:
    android.widget.TextView itemText -> a
    android.widget.ImageView itemIcon -> b
    android.widget.ImageView itemNewtip -> c
    fxyy.klr.gradingtestassist.view.ClickRelativeLayout itemLayout -> d
    fxyy.klr.gradingtestassist.adapter.SettingItemAdapter this$0 -> e
fxyy.klr.gradingtestassist.fragment.BaseFragment -> fxyy.klr.gradingtestassist.b.a:
    java.lang.String TAG -> a
    android.os.Handler handler -> b
    android.view.View profileView -> c
    fxyy.klr.gradingtestassist.model.Examinee examinee -> d
    android.widget.RadioGroup rg_generalAchievement -> e
    android.widget.EditText et_recommendOrSuggestion -> f
    int fromsState -> g
    fxyy.klr.gradingtestassist.activity.GradingTestActivity gta5 -> h
    android.app.Dialog commentsDialog -> i
    android.widget.ArrayAdapter commentsAdapter -> j
    int[] radioTextId1 -> k
    int[] radioScore -> l
    int[] radioTextId2 -> m
    void saveData(int) -> a
    void popUpCommentDialog() -> a
    java.lang.String exchangeGrade(java.lang.String) -> a
    void setFilter(java.lang.String,java.lang.String,java.lang.String) -> a
    android.view.View getProfileView() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDestroy() -> onDestroy
    void setOptions(android.widget.RadioGroup,java.lang.String) -> a
    void setOptions(fxyy.klr.gradingtestassist.view.NestRadioGroup,java.lang.String) -> a
    java.lang.String getOptions(fxyy.klr.gradingtestassist.view.NestRadioGroup) -> a
    java.lang.String getOptions(android.widget.RadioGroup) -> a
    void generateFromsPreview() -> c
    boolean checkIntegrity(boolean) -> a
fxyy.klr.gradingtestassist.fragment.BaseFragment$1 -> fxyy.klr.gradingtestassist.b.b:
    fxyy.klr.gradingtestassist.fragment.BaseFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
fxyy.klr.gradingtestassist.fragment.BaseFragment$2 -> fxyy.klr.gradingtestassist.b.c:
    fxyy.klr.gradingtestassist.fragment.BaseFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.BaseFragment$CommItem -> fxyy.klr.gradingtestassist.b.d:
    boolean select -> a
    java.lang.String content -> b
    fxyy.klr.gradingtestassist.fragment.BaseFragment this$0 -> c
fxyy.klr.gradingtestassist.fragment.BaseFragment$FocusRunable -> fxyy.klr.gradingtestassist.b.e:
    android.widget.EditText et -> a
    fxyy.klr.gradingtestassist.fragment.BaseFragment this$0 -> b
    void run() -> run
fxyy.klr.gradingtestassist.fragment.BaseFragment$MyArrayAdapter -> fxyy.klr.gradingtestassist.b.f:
    int layoutId -> a
    fxyy.klr.gradingtestassist.fragment.BaseFragment this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment -> fxyy.klr.gradingtestassist.b.g:
    java.lang.String TAG -> a
    java.util.List unpassList -> b
    java.util.List unSubmitList -> c
    java.util.List passList -> d
    android.widget.TextView tab_pass -> e
    android.widget.TextView tab_unpass -> f
    android.widget.TextView tab_unSubmit -> g
    android.widget.TextView tab_index -> h
    android.widget.TextView tv_uploadAll -> i
    android.widget.RelativeLayout holderLayout -> j
    fxyy.klr.gradingtestassist.view.XListView mListView -> k
    android.os.Handler mHandler -> l
    fxyy.klr.gradingtestassist.adapter.ExamineeListAdpater adapter -> m
    java.lang.String[] grades -> n
    java.lang.String[] subjecs -> o
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice webService -> p
    boolean deletRedundance -> q
    boolean viewCreate -> r
    java.lang.String bro_action_reflesh -> s
    android.content.BroadcastReceiver refleshReceiver -> v
    fxyy.klr.gradingtestassist.view.MyProgressDialog mPro -> t
    boolean mustReflesh -> u
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    java.lang.String toString() -> toString
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void cutoffNetworkRequest() -> a
    void refreshListview() -> b
    void onClick(android.view.View) -> onClick
    void switchOffLine() -> c
    void onRefresh(int) -> a
    void onLoadMore(int) -> b
    boolean checkUploading() -> d
    void fentchOnlineData(int,boolean) -> a
    void reviseListWhen408() -> e
    void fentchOfflineData(int,boolean) -> b
    fxyy.klr.gradingtestassist.model.Examinee serachSubjectBy_etid(java.lang.String) -> a
    fxyy.klr.gradingtestassist.model.Examinee serachSubjectBy_entranceid(java.lang.String) -> b
    void updateAutoCompleteList() -> f
    void clearRedudence(fxyy.klr.gradingtestassist.model.Examinee) -> a
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$1 -> fxyy.klr.gradingtestassist.b.h:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$2 -> fxyy.klr.gradingtestassist.b.i:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$3 -> fxyy.klr.gradingtestassist.b.j:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$4 -> fxyy.klr.gradingtestassist.b.k:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$5 -> fxyy.klr.gradingtestassist.b.l:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$6 -> fxyy.klr.gradingtestassist.b.m:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    int val$state -> j
    boolean val$updateNow -> k
    void callback(java.lang.String,java.lang.String,int) -> a
fxyy.klr.gradingtestassist.fragment.ExamineeListFragment$7 -> fxyy.klr.gradingtestassist.b.n:
    fxyy.klr.gradingtestassist.fragment.ExamineeListFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.GradingtestFragment -> fxyy.klr.gradingtestassist.b.o:
    java.lang.String TAG -> a
    android.widget.AutoCompleteTextView autoEditText -> b
    android.widget.ImageView clearIcon -> c
    android.widget.Button startTest -> d
    android.os.Handler handler -> e
    android.widget.TextView profileTextView -> f
    android.widget.ImageView scanQRCode -> g
    android.content.BroadcastReceiver QRCodeReciver -> h
    android.widget.ArrayAdapter arrayAdapter -> i
    android.content.BroadcastReceiver entranceidReceiver -> j
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice soapService -> k
    fxyy.klr.gradingtestassist.activity.MainActivity mActivity -> l
    fxyy.klr.gradingtestassist.model.Examinee student -> m
    android.app.Dialog gotoDialog -> n
    android.app.Dialog confirmDialog -> o
    android.app.Dialog toastDialog -> p
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    java.lang.String updateProfilePre(fxyy.klr.gradingtestassist.model.Examinee) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void showGotoDialog() -> a
    void showConfirmDialog() -> b
    void showToastDialog() -> c
    void CloseKeyBoard() -> d
    java.lang.String toString() -> toString
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    java.lang.String access$0(fxyy.klr.gradingtestassist.fragment.GradingtestFragment,fxyy.klr.gradingtestassist.model.Examinee) -> a
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$1 -> fxyy.klr.gradingtestassist.b.p:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$10 -> fxyy.klr.gradingtestassist.b.q:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$11 -> fxyy.klr.gradingtestassist.b.r:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$12 -> fxyy.klr.gradingtestassist.b.s:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$13 -> fxyy.klr.gradingtestassist.b.t:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$14 -> fxyy.klr.gradingtestassist.b.u:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$2 -> fxyy.klr.gradingtestassist.b.v:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$3 -> fxyy.klr.gradingtestassist.b.w:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$4 -> fxyy.klr.gradingtestassist.b.x:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$5 -> fxyy.klr.gradingtestassist.b.y:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$6 -> fxyy.klr.gradingtestassist.b.z:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$7 -> fxyy.klr.gradingtestassist.b.aa:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$8 -> fxyy.klr.gradingtestassist.b.ab:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$9 -> fxyy.klr.gradingtestassist.b.ac:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.GradingtestFragment$InputLowerToUper -> fxyy.klr.gradingtestassist.b.ad:
    fxyy.klr.gradingtestassist.fragment.GradingtestFragment this$0 -> a
    char[] getOriginal() -> getOriginal
    char[] getReplacement() -> getReplacement
fxyy.klr.gradingtestassist.fragment.Gradingtest_MusicInstrumentFragment -> fxyy.klr.gradingtestassist.b.ae:
    java.lang.String TAG -> n
    fxyy.klr.gradingtestassist.model.MusicInstrumentTest miModel -> z
    android.widget.TextView tv_name -> o
    android.widget.TextView tv_entranceId -> p
    android.widget.TextView tv_grade -> q
    android.widget.TextView tv_judgePersonnel -> r
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_basic -> s
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_song_practice -> t
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_song_first -> u
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_song_second -> v
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_song_third -> w
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_sightRead -> x
    java.lang.String insertSql -> y
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void profileSection() -> e
    void basicSection(android.view.View) -> a
    void practiceSection(android.view.View) -> b
    void song1Section(android.view.View) -> c
    void song2Section(android.view.View) -> d
    void song3Section(android.view.View) -> e
    void sightReadSection(android.view.View) -> f
    void recommendSection(android.view.View) -> g
    void generalAchievementSection(android.view.View) -> h
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void saveData(int) -> a
    boolean checkIntegrity(boolean) -> a
    void importData() -> d
    void onCheckedChanged(fxyy.klr.gradingtestassist.view.NestRadioGroup,int) -> a
    void generateFromsPreview() -> c
fxyy.klr.gradingtestassist.fragment.Gradingtest_MusicTheoryFragment -> fxyy.klr.gradingtestassist.b.af:
    fxyy.klr.gradingtestassist.model.MusicTheoryTest mtModel -> n
    android.widget.TextView tv_name -> o
    android.widget.TextView tv_entranceId -> p
    android.widget.TextView tv_grade -> q
    android.widget.TextView tv_judgePersonnel -> r
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_rhythImitate -> s
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_pitchImitate1 -> t
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_pitchImitate2 -> u
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_melodyImitate -> v
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_sightSinging -> w
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void profileSection() -> e
    void rhythmSection(android.view.View) -> a
    void pitchSection1(android.view.View) -> b
    void pitchSection2(android.view.View) -> c
    void melodySection(android.view.View) -> d
    void sightSingSection(android.view.View) -> e
    void generalAchievementSection(android.view.View) -> f
    void recommendSection(android.view.View) -> g
    void importData() -> d
    void saveData(int) -> a
    boolean checkIntegrity(boolean) -> a
    void onDestroy() -> onDestroy
    void onCheckedChanged(fxyy.klr.gradingtestassist.view.NestRadioGroup,int) -> a
    void generateFromsPreview() -> c
fxyy.klr.gradingtestassist.fragment.Gradingtest_MusicTheoryFragment$1 -> fxyy.klr.gradingtestassist.b.ag:
    fxyy.klr.gradingtestassist.fragment.Gradingtest_MusicTheoryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.fragment.Gradingtest_VoiceMusicFragment -> fxyy.klr.gradingtestassist.b.ah:
    java.lang.String TAG -> n
    fxyy.klr.gradingtestassist.model.VocalMusicTest vmModel -> o
    android.widget.TextView tv_name -> p
    android.widget.TextView tv_entranceId -> q
    android.widget.TextView tv_grade -> r
    android.widget.TextView tv_judgePersonnel -> s
    android.widget.EditText et_demandSong -> t
    android.widget.EditText et_optionSong -> u
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_intonationRhythm -> v
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_pronunciation -> w
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_emotionExoression -> x
    fxyy.klr.gradingtestassist.view.NestRadioGroup rg_instrumentTraining -> y
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void profileSection(android.view.View) -> a
    void intonationSection(android.view.View) -> b
    void pronunciationSection(android.view.View) -> c
    void emotionExpressionSection(android.view.View) -> d
    void instrumentTrainingSection(android.view.View) -> e
    void generalAchievementSection(android.view.View) -> f
    void judgeRecommendSection(android.view.View) -> g
    void onClick(android.view.View) -> onClick
    boolean checkIntegrity(boolean) -> a
    void saveData(int) -> a
    void importData() -> d
    void onDestroy() -> onDestroy
    void onCheckedChanged(fxyy.klr.gradingtestassist.view.NestRadioGroup,int) -> a
    void generateFromsPreview() -> c
fxyy.klr.gradingtestassist.fragment.SettingFragment -> fxyy.klr.gradingtestassist.b.ai:
    android.view.View headView -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onPause() -> onPause
    void onResume() -> onResume
fxyy.klr.gradingtestassist.fragment.TestRulesFragment -> fxyy.klr.gradingtestassist.b.aj:
    java.lang.String TAG -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onPause() -> onPause
    void onResume() -> onResume
fxyy.klr.gradingtestassist.model.Comments -> fxyy.klr.gradingtestassist.model.Comments:
    java.lang.String text -> text
    java.lang.String mark -> mark
    java.lang.String subject -> subject
    java.lang.String level -> level
fxyy.klr.gradingtestassist.model.Examinee -> fxyy.klr.gradingtestassist.model.a:
    java.lang.String name -> a
    java.lang.String subject -> b
    java.lang.String gradePro -> c
    java.lang.String gradeBasic -> d
    java.lang.String grade -> e
    java.lang.String entranceId -> f
    java.lang.String etId -> g
    java.lang.String eslId -> h
    int testType -> i
    boolean uploading -> j
    int state -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getSubject() -> b
    void setSubject(java.lang.String) -> b
    java.lang.String getGradePro() -> c
    void setGradePro(java.lang.String) -> c
    java.lang.String getGradeBasic() -> d
    void setGradeBasic(java.lang.String) -> d
    java.lang.String getEntranceId() -> e
    int getTestType() -> f
    int getState() -> g
    void setState(int) -> a
    boolean isUploading() -> h
    void setUploading(boolean) -> a
    void setTestType(java.lang.String) -> e
    void setTestType(int) -> b
    void setEntranceId(java.lang.String) -> f
    java.lang.String getEtId() -> i
    void setEtId(java.lang.String) -> g
    java.lang.String getEslId() -> j
    void setEslId(java.lang.String) -> h
    int describeContents() -> describeContents
    java.lang.String getGrade() -> k
    void setGrade(java.lang.String) -> i
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
fxyy.klr.gradingtestassist.model.Examinee$1 -> fxyy.klr.gradingtestassist.model.b:
    fxyy.klr.gradingtestassist.model.Examinee createFromParcel(android.os.Parcel) -> a
    fxyy.klr.gradingtestassist.model.Examinee[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
fxyy.klr.gradingtestassist.model.Loginer -> fxyy.klr.gradingtestassist.model.c:
    java.lang.String accountId -> a
    java.lang.String password -> b
    boolean pwdRemember -> c
    long timeStamp -> d
    java.lang.String name -> e
    java.lang.String sex -> f
    java.lang.String phone -> g
    java.lang.String birthday -> h
    java.lang.String getAccountId() -> a
    void setAccountId(java.lang.String) -> a
    void setName(java.lang.String) -> b
    java.lang.String getPassword() -> b
    void setPassword(java.lang.String) -> c
    boolean isPwdRemember() -> c
    void setPwdRemember(boolean) -> a
    void setTimeStamp(long) -> a
    void setSex(java.lang.String) -> d
    void setPhone(java.lang.String) -> e
    void setBirthday(java.lang.String) -> f
fxyy.klr.gradingtestassist.model.MusicInstrumentTest -> fxyy.klr.gradingtestassist.model.d:
    java.lang.String name -> a
    java.lang.String grade -> b
    java.lang.String submitId -> c
    java.lang.String timeStamp -> d
    java.lang.String etId -> e
    java.lang.String eslId -> f
    java.lang.String subject -> g
    java.lang.String entranceId -> h
    int state -> i
    java.lang.String basic_practice -> j
    java.lang.String song_practice -> k
    java.lang.String song_first -> l
    java.lang.String song_second -> m
    java.lang.String song_third -> n
    java.lang.String sightRead -> o
    java.lang.String recommendOrSuggestion -> p
    java.lang.String reviewComment -> q
    java.lang.String judegPersonel -> r
    void setEtId(java.lang.String) -> a
    void setState(int) -> a
    void setTimeStamp(java.lang.String) -> b
    java.lang.String getName() -> a
    void setName(java.lang.String) -> c
    void setGrade(java.lang.String) -> d
    void setSubmitId(java.lang.String) -> e
    void setEntranceId(java.lang.String) -> f
    void setEslId(java.lang.String) -> g
    void setSubject(java.lang.String) -> h
    java.lang.String getBasic_practice() -> b
    void setBasic_practice(java.lang.String) -> i
    java.lang.String getSong_practice() -> c
    void setSong_practice(java.lang.String) -> j
    java.lang.String getSong_first() -> d
    void setSong_first(java.lang.String) -> k
    java.lang.String getSong_second() -> e
    void setSong_second(java.lang.String) -> l
    java.lang.String getSong_third() -> f
    void setSong_third(java.lang.String) -> m
    java.lang.String getSightRead() -> g
    void setSightRead(java.lang.String) -> n
    java.lang.String getRecommendOrSuggestion() -> h
    void setRecommendOrSuggestion(java.lang.String) -> o
    java.lang.String getReviewComment() -> i
    void setReviewComment(java.lang.String) -> p
    void setJudegPersonel(java.lang.String) -> q
    java.util.Map toMapEntity(android.content.Context) -> a
    java.lang.String toString() -> toString
fxyy.klr.gradingtestassist.model.MusicTheoryTest -> fxyy.klr.gradingtestassist.model.e:
    java.lang.String timeStamp -> a
    java.lang.String etId -> b
    java.lang.String eslId -> c
    java.lang.String subject -> d
    java.lang.String entranceId -> e
    java.lang.String name -> f
    java.lang.String grade -> g
    java.lang.String submitId -> h
    int state -> i
    java.lang.String rhythmImitate -> j
    java.lang.String pitchImitate_part1 -> k
    java.lang.String pitchImitate_part2 -> l
    java.lang.String melodyImitate -> m
    java.lang.String sightSinging -> n
    java.lang.String generalAchievement -> o
    java.lang.String recommendOrSuggestion -> p
    java.lang.String judgePersonnel -> q
    void setState(int) -> a
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    void setGrade(java.lang.String) -> b
    void setTimeStamp(java.lang.String) -> c
    void setEntranceId(java.lang.String) -> d
    void setSubmitId(java.lang.String) -> e
    java.lang.String getRhythmImitate() -> b
    void setRhythmImitate(java.lang.String) -> f
    java.lang.String getPitchImitate_part1() -> c
    void setPitchImitate_part1(java.lang.String) -> g
    java.lang.String getPitchImitate_part2() -> d
    void setPitchImitate_part2(java.lang.String) -> h
    java.lang.String getMelodyImitate() -> e
    void setMelodyImitate(java.lang.String) -> i
    java.lang.String getSightSinging() -> f
    void setSightSinging(java.lang.String) -> j
    java.lang.String getGeneralAchievement() -> g
    void setGeneralAchievement(java.lang.String) -> k
    java.lang.String getRecommendOrSuggestion() -> h
    void setRecommendOrSuggestion(java.lang.String) -> l
    void setJudgePersonnel(java.lang.String) -> m
    void setEtId(java.lang.String) -> n
    void setEslId(java.lang.String) -> o
    void setSubject(java.lang.String) -> p
    java.util.Map toMapEntity(android.content.Context) -> a
fxyy.klr.gradingtestassist.model.Signature -> fxyy.klr.gradingtestassist.model.f:
    java.lang.String uId -> a
    java.lang.String timeStamp -> b
    java.lang.String data -> c
    java.lang.String getuId() -> a
    void setuId(java.lang.String) -> a
    java.lang.String getTimeStamp() -> b
    void setTimeStamp(java.lang.String) -> b
    java.lang.String getData() -> c
    void setData(java.lang.String) -> c
fxyy.klr.gradingtestassist.model.VocalMusicTest -> fxyy.klr.gradingtestassist.model.g:
    java.lang.String timeStamp -> a
    java.lang.String etId -> b
    java.lang.String entranceId -> c
    java.lang.String name -> d
    java.lang.String grade -> e
    java.lang.String submitId -> f
    java.lang.String eslId -> g
    java.lang.String subject -> h
    int state -> i
    java.lang.String judgePersonnel -> n
    java.lang.String demandSong -> j
    java.lang.String optionSong -> k
    java.lang.String intonationRhythm -> l
    java.lang.String pronunciation -> o
    java.lang.String emotionExpressiong -> p
    java.lang.String instrumentTraining -> q
    java.lang.String generalAchievement -> m
    java.lang.String recommednOrSuggestion -> r
    void setState(int) -> a
    void setTimeStamp(java.lang.String) -> a
    void setEntranceId(java.lang.String) -> b
    java.lang.String getName() -> a
    void setName(java.lang.String) -> c
    void setGrade(java.lang.String) -> d
    void setSubmitId(java.lang.String) -> e
    java.lang.String getDemandSong() -> b
    void setDemandSong(java.lang.String) -> f
    java.lang.String getOptionSong() -> c
    void setOptionSong(java.lang.String) -> g
    java.lang.String getIntonationRhythm() -> d
    void setIntonationRhythm(java.lang.String) -> h
    java.lang.String getPronunciation() -> e
    void setPronunciation(java.lang.String) -> i
    java.lang.String getRecommednOrSuggestion() -> f
    void setRecommednOrSuggestion(java.lang.String) -> j
    java.lang.String getGeneralAchievement() -> g
    void setGeneralAchievement(java.lang.String) -> k
    void setJudgePersonnel(java.lang.String) -> l
    java.lang.String getEmotionExpressiong() -> h
    void setEmotionExpressiong(java.lang.String) -> m
    java.lang.String getInstrumentTraining() -> i
    void setInstrumentTraining(java.lang.String) -> n
    void setEtId(java.lang.String) -> o
    void setEslId(java.lang.String) -> p
    void setSubject(java.lang.String) -> q
    java.util.Map toMapEntity(android.content.Context) -> a
fxyy.klr.gradingtestassist.service.BeeCallBack -> fxyy.klr.gradingtestassist.service.a:
    java.lang.String TAG -> b
    java.lang.String apiName -> c
    java.util.Map params -> d
    org.ksoap2.serialization.SoapSerializationEnvelope envelope -> e
    android.os.Handler handler -> f
    int flag -> g
    java.lang.String TARGET_NAME_SPACE -> h
    java.lang.String WSDL -> i
    fxyy.klr.gradingtestassist.service.BeeCallBack callApi(java.lang.String) -> a
    fxyy.klr.gradingtestassist.service.BeeCallBack addEntity(java.util.Map) -> a
    void callback(java.lang.String,java.lang.String,int) -> a
    java.lang.String getApiName() -> a
    void execute() -> b
    void response() -> c
fxyy.klr.gradingtestassist.service.BeeCallBack$1 -> fxyy.klr.gradingtestassist.service.b:
    fxyy.klr.gradingtestassist.service.BeeCallBack this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.service.FormTask -> fxyy.klr.gradingtestassist.service.c:
    java.lang.String TAG -> a
    android.content.Context context -> b
    fxyy.klr.gradingtestassist.model.Examinee examinee -> c
    void run() -> run
    void submitFroms() -> a
fxyy.klr.gradingtestassist.service.Ksoap2Webservice -> fxyy.klr.gradingtestassist.service.d:
    java.lang.String TAG -> a
    android.os.Handler handler -> b
    fxyy.klr.gradingtestassist.activity.BaseActivity context -> c
    java.util.ArrayList businessResponseArrayList -> d
    android.app.Dialog progressDialog -> e
    java.util.WeakHashMap askThreads -> f
    fxyy.klr.gradingtestassist.service.BeeCallBack bee -> g
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice progress(android.app.Dialog) -> a
    void ksoap(fxyy.klr.gradingtestassist.service.BeeCallBack) -> a
    void cancel(java.lang.String) -> a
fxyy.klr.gradingtestassist.service.Ksoap2Webservice$SoapRunable -> fxyy.klr.gradingtestassist.service.e:
    boolean cancel -> a
    fxyy.klr.gradingtestassist.service.Ksoap2Webservice this$0 -> b
    void run() -> run
fxyy.klr.gradingtestassist.service.MyHttpTransportSE -> fxyy.klr.gradingtestassist.service.f:
    int timeout -> e
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> a
fxyy.klr.gradingtestassist.service.MyServiceConnectionSE -> fxyy.klr.gradingtestassist.service.g:
    java.net.HttpURLConnection connection -> a
    void connect() -> a
    void disconnect() -> b
    void setRequestProperty(java.lang.String,java.lang.String) -> a
    void setRequestMethod(java.lang.String) -> a
    java.io.OutputStream openOutputStream() -> c
    java.io.InputStream openInputStream() -> d
    java.io.InputStream getErrorStream() -> e
    void setTimeout(int) -> a
fxyy.klr.gradingtestassist.service.MyThreadPool -> fxyy.klr.gradingtestassist.service.h:
    boolean isClose -> b
    java.util.LinkedList workQueue -> c
    int threadPollID -> d
    fxyy.klr.gradingtestassist.service.MyThreadPool threadPool -> a
    fxyy.klr.gradingtestassist.service.MyThreadPool getInstance() -> a
    void execute(java.lang.Runnable) -> a
    java.lang.Runnable getTask(int) -> a
    java.lang.Runnable access$0(fxyy.klr.gradingtestassist.service.MyThreadPool,int) -> a
fxyy.klr.gradingtestassist.service.MyThreadPool$WorkThread -> fxyy.klr.gradingtestassist.service.i:
    int id -> b
    fxyy.klr.gradingtestassist.service.MyThreadPool this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService -> fxyy.klr.gradingtestassist.service.NetworkStateService:
    java.lang.String TAG -> a
    android.net.ConnectivityManager connectivityManager -> e
    android.net.NetworkInfo info -> f
    android.content.SharedPreferences shared -> g
    android.content.SharedPreferences$Editor editor -> h
    android.content.SharedPreferences logshared -> i
    android.content.SharedPreferences$Editor logEditor -> j
    int netType -> k
    android.os.Handler handler -> b
    android.content.BroadcastReceiver mReceiver -> l
    fxyy.klr.gradingtestassist.service.NetworkStateService$MyBinder myBinder -> c
    java.util.Timer timer -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void batchUploadLog() -> a
    void batchUploadSignature() -> b
    void startSignatureTimer() -> c
    void stopSignatureTimer() -> d
    void access$0(fxyy.klr.gradingtestassist.service.NetworkStateService,android.net.ConnectivityManager) -> a
    android.net.ConnectivityManager access$1(fxyy.klr.gradingtestassist.service.NetworkStateService) -> a
    void access$2(fxyy.klr.gradingtestassist.service.NetworkStateService,android.net.NetworkInfo) -> a
    android.net.NetworkInfo access$3(fxyy.klr.gradingtestassist.service.NetworkStateService) -> b
    android.content.SharedPreferences$Editor access$4(fxyy.klr.gradingtestassist.service.NetworkStateService) -> c
    void access$5(fxyy.klr.gradingtestassist.service.NetworkStateService,int) -> a
    android.content.SharedPreferences$Editor access$6(fxyy.klr.gradingtestassist.service.NetworkStateService) -> d
fxyy.klr.gradingtestassist.service.NetworkStateService$1 -> fxyy.klr.gradingtestassist.service.j:
    fxyy.klr.gradingtestassist.service.NetworkStateService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    fxyy.klr.gradingtestassist.service.NetworkStateService access$0(fxyy.klr.gradingtestassist.service.NetworkStateService$1) -> a
fxyy.klr.gradingtestassist.service.NetworkStateService$1$1 -> fxyy.klr.gradingtestassist.service.k:
    fxyy.klr.gradingtestassist.service.NetworkStateService$1 this$1 -> a
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService$1$2 -> fxyy.klr.gradingtestassist.service.l:
    fxyy.klr.gradingtestassist.service.NetworkStateService$1 this$1 -> a
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService$2 -> fxyy.klr.gradingtestassist.service.m:
    fxyy.klr.gradingtestassist.service.NetworkStateService this$0 -> a
    java.io.File val$file -> b
    java.lang.String val$string -> c
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService$3 -> fxyy.klr.gradingtestassist.service.n:
    fxyy.klr.gradingtestassist.service.NetworkStateService this$0 -> a
    fxyy.klr.gradingtestassist.model.Signature val$signature -> b
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService$4 -> fxyy.klr.gradingtestassist.service.o:
    fxyy.klr.gradingtestassist.service.NetworkStateService this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.service.NetworkStateService$MyBinder -> fxyy.klr.gradingtestassist.service.p:
    fxyy.klr.gradingtestassist.service.NetworkStateService this$0 -> a
    fxyy.klr.gradingtestassist.service.NetworkStateService getService() -> a
fxyy.klr.gradingtestassist.service.SignatureTask -> fxyy.klr.gradingtestassist.service.q:
    java.lang.String TAG -> a
    fxyy.klr.gradingtestassist.model.Signature signature -> b
    android.content.Context context -> c
    void run() -> run
fxyy.klr.gradingtestassist.utils.Code -> fxyy.klr.gradingtestassist.c.a:
    char[] CHARS -> b
    fxyy.klr.gradingtestassist.utils.Code bmpCode -> c
    int width -> d
    int height -> e
    int base_padding_left -> f
    int range_padding_left -> g
    int base_padding_top -> h
    int range_padding_top -> i
    int codeLength -> j
    int line_number -> k
    int font_size -> l
    java.lang.String code -> m
    float padding_left -> n
    float padding_top -> o
    java.util.Random random -> p
    android.graphics.Paint paint -> a
    fxyy.klr.gradingtestassist.utils.Code getInstance(android.content.Context) -> a
    android.graphics.Bitmap createBitmap() -> a
    java.lang.String getCode() -> b
    java.lang.String createCode() -> c
    void drawLine(android.graphics.Canvas,android.graphics.Paint) -> a
    int randomColor() -> d
    int randomColor(int) -> a
    void randomTextStyle(android.graphics.Paint) -> a
    void randomPadding() -> e
fxyy.klr.gradingtestassist.utils.CustomExceptionHandler -> fxyy.klr.gradingtestassist.c.b:
    java.lang.Thread$UncaughtExceptionHandler defaultUEH -> a
    java.lang.String localPath -> b
    android.content.Context context -> c
    android.content.SharedPreferences logshared -> d
    android.content.SharedPreferences$Editor logEditor -> e
    fxyy.klr.gradingtestassist.utils.CustomExceptionHandler exHandler -> f
    java.util.Map infos -> g
    fxyy.klr.gradingtestassist.utils.CustomExceptionHandler getInstance(android.content.Context,java.lang.String,java.lang.String) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void writeToFile(java.lang.String,java.lang.String) -> a
    void sendToServer(java.lang.String,java.lang.String) -> b
    android.content.Context access$0(fxyy.klr.gradingtestassist.utils.CustomExceptionHandler) -> a
    android.content.SharedPreferences$Editor access$1(fxyy.klr.gradingtestassist.utils.CustomExceptionHandler) -> b
fxyy.klr.gradingtestassist.utils.CustomExceptionHandler$1 -> fxyy.klr.gradingtestassist.c.c:
    fxyy.klr.gradingtestassist.utils.CustomExceptionHandler this$0 -> a
    java.lang.String val$stacktrace -> b
    java.lang.String val$filename -> c
    void run() -> run
fxyy.klr.gradingtestassist.utils.TimeUtil -> fxyy.klr.gradingtestassist.c.d:
    java.lang.String timeStamp(java.lang.String) -> a
    java.lang.String timeAgo(long) -> a
fxyy.klr.gradingtestassist.utils.Utils -> fxyy.klr.gradingtestassist.c.e:
    java.lang.String ANDROID_UUID -> a
    java.lang.String taobao_ip_api -> b
    java.lang.String getAppVersionName(android.content.Context) -> a
    java.lang.String testXor(java.lang.String) -> a
    java.lang.String testXor(byte[],int,int) -> a
    java.lang.String getMac(android.content.Context) -> b
    java.lang.String _getMac(android.content.Context) -> c
    void getNetworkIp() -> a
    void executeDownload(android.content.Context,java.lang.String) -> a
    void loadComments(android.content.Context,android.database.sqlite.SQLiteDatabase) -> a
    java.lang.String base64Encoding(java.io.File) -> a
    boolean uploadLog(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean uploadSignature(android.content.Context,fxyy.klr.gradingtestassist.model.Signature) -> a
    int checkUserStatus(android.content.Context) -> d
    java.lang.String cfg_screen_ratio(android.content.Context) -> e
    java.lang.String cfg_density(android.content.Context) -> f
    java.lang.String cfg_orientation(android.content.Context) -> g
    void coll_device_cfg(android.content.Context,java.util.Map) -> a
    void collectDeviceInfo(android.content.Context,java.util.Map) -> b
    java.lang.String mapInfo2String(java.util.Map) -> a
    boolean isTopActivy(android.content.Context,java.lang.Class) -> a
    boolean checkInvalidNetwork() -> b
    byte[] bmpToByteArray(android.graphics.Bitmap,boolean) -> a
    boolean checkSDcard() -> c
fxyy.klr.gradingtestassist.utils.Utils$1 -> fxyy.klr.gradingtestassist.c.f:
    xx.fjfxyy.updateloadapk.downloadAPK val$demo -> a
    java.lang.String val$download_url -> b
    void run() -> run
fxyy.klr.gradingtestassist.view.ClickRelativeLayout -> fxyy.klr.gradingtestassist.view.ClickRelativeLayout:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
fxyy.klr.gradingtestassist.view.FingerPaintView -> fxyy.klr.gradingtestassist.view.FingerPaintView:
    java.lang.String firstPaint -> f
    android.graphics.Paint mPaint -> g
    android.view.SurfaceHolder holder -> h
    android.graphics.Bitmap mBitmap -> i
    android.graphics.Canvas mCanvas -> j
    android.graphics.Path mPath -> k
    android.graphics.Paint mBitmapPaint -> l
    android.os.Handler handler -> m
    java.util.ArrayList pathList -> a
    float mX -> n
    float mY -> o
    java.lang.StringBuilder pathBuilder -> b
    java.lang.String signatureStr -> c
    boolean operate -> d
    boolean clearFlag -> e
    void initView() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void drawCanvas() -> b
    void touch_start(float,float) -> b
    void touch_move(float,float) -> c
    void touch_up() -> f
    void touch_point(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clearView() -> c
    void restoreSignature(android.view.View) -> a
    void recovery() -> d
    java.lang.String exportSignatureData() -> e
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void access$0(fxyy.klr.gradingtestassist.view.FingerPaintView,float,float) -> a
    void access$1(fxyy.klr.gradingtestassist.view.FingerPaintView,float,float) -> b
    void access$2(fxyy.klr.gradingtestassist.view.FingerPaintView) -> a
    android.os.Handler access$3(fxyy.klr.gradingtestassist.view.FingerPaintView) -> b
fxyy.klr.gradingtestassist.view.FingerPaintView$1 -> fxyy.klr.gradingtestassist.view.a:
    fxyy.klr.gradingtestassist.view.FingerPaintView this$0 -> a
    android.view.View val$view -> b
    void run() -> run
fxyy.klr.gradingtestassist.view.FingerPaintView$1$1 -> fxyy.klr.gradingtestassist.view.b:
    fxyy.klr.gradingtestassist.view.FingerPaintView$1 this$1 -> a
    android.view.View val$view -> b
    void run() -> run
fxyy.klr.gradingtestassist.view.MyProgressDialog -> fxyy.klr.gradingtestassist.view.c:
    android.app.Dialog mDialog -> a
    android.graphics.drawable.AnimationDrawable animationDrawable -> b
    void show() -> a
fxyy.klr.gradingtestassist.view.NestRadioGroup -> fxyy.klr.gradingtestassist.view.NestRadioGroup:
    int mCheckedId -> b
    android.widget.CompoundButton$OnCheckedChangeListener mChildOnCheckedChangeListener -> c
    boolean mProtectFromCheckedChange -> d
    fxyy.klr.gradingtestassist.view.NestRadioGroup$OnCheckedChangeListener mOnCheckedChangeListener -> e
    fxyy.klr.gradingtestassist.view.NestRadioGroup$PassThroughHierarchyChangeListener mPassThroughListener -> f
    java.util.List cacheButtons -> a
    void init() -> a
    void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    void onFinishInflate() -> onFinishInflate
    java.util.List findCheckedView(android.view.View) -> a
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.widget.CompoundButton getRadioAt(int) -> a
    int getRadioCount() -> getRadioCount
    void check(int) -> b
    void setCheckedId(int) -> setCheckedId
    void setCheckedStateForView(int,boolean) -> a
    int getCheckedRadioButtonId() -> getCheckedRadioButtonId
    void setOnCheckedChangeListener(fxyy.klr.gradingtestassist.view.NestRadioGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    fxyy.klr.gradingtestassist.view.NestRadioGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean access$1(fxyy.klr.gradingtestassist.view.NestRadioGroup) -> a
    void access$2(fxyy.klr.gradingtestassist.view.NestRadioGroup,boolean) -> a
    int access$3(fxyy.klr.gradingtestassist.view.NestRadioGroup) -> b
    void access$4(fxyy.klr.gradingtestassist.view.NestRadioGroup,int,boolean) -> a
    void access$5(fxyy.klr.gradingtestassist.view.NestRadioGroup,int) -> a
    java.util.List access$6(fxyy.klr.gradingtestassist.view.NestRadioGroup,android.view.View) -> a
    android.widget.CompoundButton$OnCheckedChangeListener access$7(fxyy.klr.gradingtestassist.view.NestRadioGroup) -> c
fxyy.klr.gradingtestassist.view.NestRadioGroup$CheckedStateTracker -> fxyy.klr.gradingtestassist.view.d:
    fxyy.klr.gradingtestassist.view.NestRadioGroup this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
fxyy.klr.gradingtestassist.view.NestRadioGroup$LayoutParams -> fxyy.klr.gradingtestassist.view.e:
    void setBaseAttributes(android.content.res.TypedArray,int,int) -> setBaseAttributes
fxyy.klr.gradingtestassist.view.NestRadioGroup$OnCheckedChangeListener -> fxyy.klr.gradingtestassist.view.f:
    void onCheckedChanged(fxyy.klr.gradingtestassist.view.NestRadioGroup,int) -> a
fxyy.klr.gradingtestassist.view.NestRadioGroup$PassThroughHierarchyChangeListener -> fxyy.klr.gradingtestassist.view.g:
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> b
    fxyy.klr.gradingtestassist.view.NestRadioGroup this$0 -> a
    void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
    void access$1(fxyy.klr.gradingtestassist.view.NestRadioGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> a
fxyy.klr.gradingtestassist.view.ToastView -> fxyy.klr.gradingtestassist.view.h:
    android.widget.Toast toast -> a
    void show() -> a
    void cancel() -> b
fxyy.klr.gradingtestassist.view.XListView -> fxyy.klr.gradingtestassist.view.XListView:
    float mLastY -> f
    android.widget.Scroller mScroller -> g
    android.widget.AbsListView$OnScrollListener mScrollListener -> h
    fxyy.klr.gradingtestassist.view.XListView$IXListViewListener mListViewListener -> i
    fxyy.klr.gradingtestassist.view.XListViewHeader mHeaderView -> j
    android.widget.RelativeLayout mHeaderViewContent -> k
    android.widget.TextView mHeaderTimeView -> l
    int mHeaderViewHeight -> m
    boolean mEnablePullRefresh -> n
    boolean mPullRefreshing -> o
    java.lang.String TAG -> p
    fxyy.klr.gradingtestassist.view.XListViewFooter mFooterView -> q
    boolean mEnablePullLoad -> r
    boolean mPullLoading -> s
    boolean mIsFooterReady -> t
    int mTotalItemCount -> u
    int mScrollBack -> v
    int id -> w
    android.content.SharedPreferences appShares -> x
    android.content.SharedPreferences$Editor mEditor -> y
    boolean openSilent -> a
    android.os.Handler handler -> b
    long latestTime -> c
    int TIME_REFRESH_RATE -> d
    java.lang.Runnable silentReflesh -> e
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void initRefreshTime() -> e
    void postRefleshTime() -> b
    void setOpenSilent(boolean) -> setOpenSilent
    java.lang.String date() -> c
    void invokeOnScrolling() -> f
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> g
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> h
    void startLoadMore() -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(fxyy.klr.gradingtestassist.view.XListView$IXListViewListener,int) -> a
    android.widget.TextView access$0(fxyy.klr.gradingtestassist.view.XListView) -> a
    android.widget.RelativeLayout access$1(fxyy.klr.gradingtestassist.view.XListView) -> b
    void access$2(fxyy.klr.gradingtestassist.view.XListView,int) -> a
    int access$3(fxyy.klr.gradingtestassist.view.XListView) -> c
fxyy.klr.gradingtestassist.view.XListView$1 -> fxyy.klr.gradingtestassist.view.i:
    fxyy.klr.gradingtestassist.view.XListView this$0 -> a
    void run() -> run
fxyy.klr.gradingtestassist.view.XListView$2 -> fxyy.klr.gradingtestassist.view.j:
    fxyy.klr.gradingtestassist.view.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
fxyy.klr.gradingtestassist.view.XListView$3 -> fxyy.klr.gradingtestassist.view.k:
    fxyy.klr.gradingtestassist.view.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
fxyy.klr.gradingtestassist.view.XListView$IXListViewListener -> fxyy.klr.gradingtestassist.view.l:
    void onRefresh(int) -> a
    void onLoadMore(int) -> b
fxyy.klr.gradingtestassist.view.XListView$OnXScrollListener -> fxyy.klr.gradingtestassist.view.m:
    void onXScrolling(android.view.View) -> a
fxyy.klr.gradingtestassist.view.XListViewFooter -> fxyy.klr.gradingtestassist.view.n:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
fxyy.klr.gradingtestassist.view.XListViewHeader -> fxyy.klr.gradingtestassist.view.o:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    java.lang.String TAG -> i
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
fxyy.klr.gradingtestassist.view.XScrollView -> fxyy.klr.gradingtestassist.view.XScrollView:
    android.view.View inner -> a
    float y -> b
    android.graphics.Rect normal -> c
    int SCROLL_DURATION -> d
    android.content.Context context -> e
    fxyy.klr.gradingtestassist.view.XScrollView$OnScrollListener mOnScrollListener -> f
    void closeKeyBoard() -> a
    void setOnScrollListener(fxyy.klr.gradingtestassist.view.XScrollView$OnScrollListener) -> setOnScrollListener
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void onFinishInflate() -> onFinishInflate
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void commOnTouchEvent(android.view.MotionEvent) -> a
    void scrollAnim() -> b
    boolean isNeedAnima() -> c
    boolean isNeedMove() -> d
fxyy.klr.gradingtestassist.view.XScrollView$OnScrollListener -> fxyy.klr.gradingtestassist.view.p:
    void onScroll(android.widget.ScrollView,int) -> a
org.ksoap2.SoapEnvelope -> a.a.a:
    java.lang.Object bodyIn -> a
    java.lang.Object bodyOut -> b
    org.kxml2.kdom.Element[] headerIn -> c
    org.kxml2.kdom.Element[] headerOut -> d
    java.lang.String encodingStyle -> e
    int version -> f
    java.lang.String env -> g
    java.lang.String enc -> h
    java.lang.String xsi -> i
    java.lang.String xsd -> j
    boolean stringToBoolean(java.lang.String) -> a
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void parseHeader(org.xmlpull.v1.XmlPullParser) -> b
    void parseBody(org.xmlpull.v1.XmlPullParser) -> c
    void write(org.xmlpull.v1.XmlSerializer) -> a
    void writeHeader(org.xmlpull.v1.XmlSerializer) -> b
    void writeBody(org.xmlpull.v1.XmlSerializer) -> c
    void setOutputSoapObject(java.lang.Object) -> a
org.ksoap2.SoapFault -> a.a.b:
    java.lang.String faultcode -> a
    java.lang.String faultstring -> b
    java.lang.String faultactor -> c
    org.kxml2.kdom.Node detail -> d
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    java.lang.String toString() -> toString
org.ksoap2.serialization.AttributeInfo -> a.a.a.a:
org.ksoap2.serialization.DM -> a.a.a.b:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> a
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> a
org.ksoap2.serialization.FwdRef -> a.a.a.c:
    org.ksoap2.serialization.FwdRef next -> a
    java.lang.Object obj -> b
    int index -> c
org.ksoap2.serialization.KvmSerializable -> a.a.a.d:
    java.lang.Object getProperty(int) -> a
    int getPropertyCount() -> a
    void setProperty(int,java.lang.Object) -> a
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
org.ksoap2.serialization.Marshal -> a.a.a.e:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> a
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> a
org.ksoap2.serialization.PropertyInfo -> a.a.a.f:
    java.lang.Class OBJECT_CLASS -> a
    java.lang.Class STRING_CLASS -> b
    java.lang.Class INTEGER_CLASS -> c
    java.lang.Class LONG_CLASS -> d
    java.lang.Class BOOLEAN_CLASS -> e
    java.lang.Class VECTOR_CLASS -> f
    org.ksoap2.serialization.PropertyInfo OBJECT_TYPE -> g
    java.lang.String name -> h
    java.lang.String namespace -> i
    int flags -> j
    java.lang.Object value -> k
    java.lang.Object type -> l
    boolean multiRef -> m
    org.ksoap2.serialization.PropertyInfo elementType -> n
    java.lang.String getName() -> a
    java.lang.String getNamespace() -> b
    java.lang.Object getValue() -> c
    void setValue(java.lang.Object) -> a
    java.lang.String toString() -> toString
org.ksoap2.serialization.SoapObject -> a.a.a.g:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.util.Vector properties -> c
    java.util.Vector attributes -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String getName() -> b
    java.lang.String getNamespace() -> c
    java.lang.Object getProperty(int) -> a
    java.lang.Object getProperty(java.lang.String) -> a
    int getPropertyCount() -> a
    void getAttributeInfo(int,org.ksoap2.serialization.AttributeInfo) -> a
    int getAttributeCount() -> d
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> a
    void getPropertyInfo(int,org.ksoap2.serialization.PropertyInfo) -> a
    org.ksoap2.serialization.SoapObject newInstance() -> e
    void setProperty(int,java.lang.Object) -> a
    org.ksoap2.serialization.SoapObject addProperty(java.lang.String,java.lang.Object) -> a
    org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo) -> a
    org.ksoap2.serialization.SoapObject addAttribute(java.lang.String,java.lang.Object) -> b
    org.ksoap2.serialization.SoapObject addAttribute(org.ksoap2.serialization.AttributeInfo) -> a
    java.lang.String toString() -> toString
org.ksoap2.serialization.SoapPrimitive -> a.a.a.h:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.lang.String value -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getNamespace() -> a
    java.lang.String getName() -> b
org.ksoap2.serialization.SoapSerializationEnvelope -> a.a.a.i:
    org.ksoap2.serialization.Marshal DEFAULT_MARSHAL -> k
    java.util.Hashtable properties -> l
    java.util.Hashtable idMap -> m
    java.util.Vector multiRef -> n
    boolean implicitTypes -> o
    boolean dotNet -> p
    java.util.Hashtable qNameToClass -> q
    java.util.Hashtable classToQName -> r
    boolean addAdornments -> s
    void parseBody(org.xmlpull.v1.XmlPullParser) -> c
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.SoapObject) -> a
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.KvmSerializable) -> a
    java.lang.Object readUnknown(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> a
    int getIndex(java.lang.String,int,int) -> a
    void readVector(org.xmlpull.v1.XmlPullParser,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object read(org.xmlpull.v1.XmlPullParser,java.lang.Object,int,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> a
    java.lang.Object[] getInfo(java.lang.Object,java.lang.Object) -> a
    void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal) -> a
    void addMapping(java.lang.String,java.lang.String,java.lang.Class) -> a
    void writeBody(org.xmlpull.v1.XmlSerializer) -> c
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.SoapObject) -> a
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.KvmSerializable) -> a
    void writeProperty(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo) -> a
    void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> a
    void writeVectorBody(org.xmlpull.v1.XmlSerializer,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> a
org.ksoap2.transport.HttpTransportSE -> a.a.b.a:
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> a
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> a
org.ksoap2.transport.ServiceConnection -> a.a.b.b:
    void connect() -> a
    void disconnect() -> b
    void setRequestProperty(java.lang.String,java.lang.String) -> a
    void setRequestMethod(java.lang.String) -> a
    java.io.OutputStream openOutputStream() -> c
    java.io.InputStream openInputStream() -> d
    java.io.InputStream getErrorStream() -> e
org.ksoap2.transport.ServiceConnectionSE -> a.a.b.c:
    java.net.HttpURLConnection connection -> a
    void connect() -> a
    void disconnect() -> b
    void setRequestProperty(java.lang.String,java.lang.String) -> a
    void setRequestMethod(java.lang.String) -> a
    java.io.OutputStream openOutputStream() -> c
    java.io.InputStream openInputStream() -> d
    java.io.InputStream getErrorStream() -> e
org.ksoap2.transport.Transport -> a.a.b.d:
    java.lang.String url -> a
    boolean debug -> b
    java.lang.String requestDump -> c
    java.lang.String responseDump -> d
    java.lang.String xmlVersionTag -> e
    void parseResponse(org.ksoap2.SoapEnvelope,java.io.InputStream) -> a
    byte[] createRequestData(org.ksoap2.SoapEnvelope) -> a
org.kxml2.io.KXmlParser -> a.b.a.a:
    java.lang.Object location -> a
    java.lang.String version -> b
    java.lang.Boolean standalone -> c
    boolean processNsp -> d
    boolean relaxed -> e
    java.util.Hashtable entityMap -> f
    int depth -> g
    java.lang.String[] elementStack -> h
    java.lang.String[] nspStack -> i
    int[] nspCounts -> j
    java.io.Reader reader -> k
    java.lang.String encoding -> l
    char[] srcBuf -> m
    int srcPos -> n
    int srcCount -> o
    int line -> p
    int column -> q
    char[] txtBuf -> r
    int txtPos -> s
    int type -> t
    boolean isWhitespace -> u
    java.lang.String namespace -> v
    java.lang.String prefix -> w
    java.lang.String name -> x
    boolean degenerated -> y
    int attributeCount -> z
    java.lang.String[] attributes -> A
    java.lang.String error -> B
    int[] peek -> C
    int peekCount -> D
    boolean wasCR -> E
    boolean unresolved -> F
    boolean token -> G
    boolean isProp(java.lang.String,boolean,java.lang.String) -> a
    boolean adjustNsp() -> a
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> a
    void error(java.lang.String) -> a
    void exception(java.lang.String) -> b
    void nextImpl() -> b
    int parseLegacy(boolean) -> a
    void parseDoctype(boolean) -> b
    void parseEndTag() -> c
    int peekType() -> d
    java.lang.String get(int) -> a
    void push(int) -> b
    void parseStartTag(boolean) -> c
    void pushEntity() -> e
    void pushText(int,boolean) -> a
    void read(char) -> a
    int read() -> f
    int peek(int) -> c
    java.lang.String readName() -> g
    void skip() -> h
    void setInput(java.io.Reader) -> a
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String getText() -> getText
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    void setFeature(java.lang.String,boolean) -> setFeature
org.kxml2.io.KXmlSerializer -> a.b.a.b:
    java.io.Writer writer -> a
    boolean pending -> b
    int auto -> c
    int depth -> d
    java.lang.String[] elementStack -> e
    int[] nspCounts -> f
    java.lang.String[] nspStack -> g
    boolean[] indent -> h
    boolean unicode -> i
    java.lang.String encoding -> j
    void check(boolean) -> a
    void writeEscaped(java.lang.String,int) -> a
    void docdecl(java.lang.String) -> a
    void entityRef(java.lang.String) -> b
    java.lang.String getPrefix(java.lang.String,boolean) -> a
    java.lang.String getPrefix(java.lang.String,boolean,boolean) -> a
    void ignorableWhitespace(java.lang.String) -> c
    void setPrefix(java.lang.String,java.lang.String) -> a
    void setOutput(java.io.Writer) -> a
    void setOutput(java.io.OutputStream,java.lang.String) -> a
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> a
    void flush() -> a
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> c
    java.lang.String getNamespace() -> b
    int getDepth() -> c
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> d
    void cdsect(java.lang.String) -> e
    void comment(java.lang.String) -> f
    void processingInstruction(java.lang.String) -> g
org.kxml2.kdom.Element -> a.b.b.a:
    java.lang.String namespace -> a
    java.lang.String name -> b
    java.util.Vector attributes -> c
    org.kxml2.kdom.Node parent -> d
    java.util.Vector prefixes -> e
    void init() -> a
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> a
    int getAttributeCount() -> b
    java.lang.String getAttributeNamespace(int) -> a
    java.lang.String getAttributeName(int) -> b
    java.lang.String getAttributeValue(int) -> c
    java.lang.String getName() -> c
    java.lang.String getNamespace() -> d
    java.lang.String getNamespacePrefix(int) -> d
    java.lang.String getNamespaceUri(int) -> e
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void setAttribute(java.lang.String,java.lang.String,java.lang.String) -> a
    void setPrefix(java.lang.String,java.lang.String) -> b
    void setParent(org.kxml2.kdom.Node) -> a
    void write(org.xmlpull.v1.XmlSerializer) -> a
org.kxml2.kdom.Node -> a.b.b.b:
    java.util.Vector children -> f
    java.lang.StringBuffer types -> g
    void addChild(int,int,java.lang.Object) -> a
    void addChild(int,java.lang.Object) -> a
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> a
    java.lang.Object getChild(int) -> f
    int getChildCount() -> e
    org.kxml2.kdom.Element getElement(int) -> g
    int getType(int) -> h
    void parse(org.xmlpull.v1.XmlPullParser) -> a
    void write(org.xmlpull.v1.XmlSerializer) -> a
    void writeChildren(org.xmlpull.v1.XmlSerializer) -> b
org.xmlpull.v1.XmlPullParser -> a.c.a.a:
    java.lang.String[] TYPES -> TYPES
    void setFeature(java.lang.String,boolean) -> setFeature
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String getText() -> getText
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    int nextTag() -> nextTag
org.xmlpull.v1.XmlPullParserException -> a.c.a.b:
    java.lang.Throwable detail -> a
    int row -> b
    int column -> c
    void printStackTrace() -> printStackTrace
org.xmlpull.v1.XmlSerializer -> a.c.a.c:
    void setOutput(java.io.OutputStream,java.lang.String) -> a
    void setPrefix(java.lang.String,java.lang.String) -> a
    java.lang.String getPrefix(java.lang.String,boolean) -> a
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> a
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> c
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> d
    void cdsect(java.lang.String) -> e
    void entityRef(java.lang.String) -> b
    void processingInstruction(java.lang.String) -> g
    void comment(java.lang.String) -> f
    void docdecl(java.lang.String) -> a
    void ignorableWhitespace(java.lang.String) -> c
    void flush() -> a
xx.fjfxyy.updateloadapk.downloadAPK -> xx.a.a.a:
    android.content.Context context -> a
    android.app.Dialog prpsessDialog -> b
    android.app.Dialog UpdateAPKDialog -> c
    java.lang.String toast -> d
    java.lang.String updateApk -> e
    int downLoadFileSize -> f
    android.widget.ProgressBar pb -> g
    android.widget.TextView tv -> h
    int fileSize -> i
    java.lang.String[] Version -> j
    java.lang.String filename -> k
    android.app.Dialog dataLoading -> l
    android.os.Handler handler -> m
    void showUpdateDataDiolog(java.lang.String) -> a
    void down_file_zip(java.lang.String,java.lang.String) -> a
    void SetProsess() -> a
    boolean isChinese(java.lang.String) -> b
    boolean isChinese(char) -> a
    void installApk(java.lang.String,android.content.Context) -> a
    void sendHandler(int) -> a
xx.fjfxyy.updateloadapk.downloadAPK$1 -> xx.a.a.b:
    xx.fjfxyy.updateloadapk.downloadAPK this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
xx.fjfxyy.updateloadapk.downloadAPK$3 -> xx.a.a.c:
    xx.fjfxyy.updateloadapk.downloadAPK this$0 -> a
    void onClick(android.view.View) -> onClick
    xx.fjfxyy.updateloadapk.downloadAPK access$0(xx.fjfxyy.updateloadapk.downloadAPK$3) -> a
xx.fjfxyy.updateloadapk.downloadAPK$3$1 -> xx.a.a.d:
    xx.fjfxyy.updateloadapk.downloadAPK$3 this$1 -> a
    void run() -> run
xx.fjfxyy.updateloadapk.downloadAPK$4 -> xx.a.a.e:
    xx.fjfxyy.updateloadapk.downloadAPK this$0 -> a
    void onClick(android.view.View) -> onClick
xx.fjnuit.QRCodeDecoder.AutoFocusCallback -> xx.fjnuit.QRCodeDecoder.a:
    java.lang.String TAG -> a
    android.os.Handler autoFocusHandler -> b
    int autoFocusMessage -> c
    void setHandler(android.os.Handler,int) -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
xx.fjnuit.QRCodeDecoder.CameraConfigurationManager -> xx.fjnuit.QRCodeDecoder.b:
    java.lang.String TAG -> a
    java.util.regex.Pattern COMMA_PATTERN -> b
    android.content.Context context -> c
    android.graphics.Point screenResolution -> d
    android.graphics.Point cameraResolution -> e
    int previewFormat -> f
    java.lang.String previewFormatString -> g
    void initFromCameraParameters(android.hardware.Camera) -> a
    void setDesiredCameraParameters(android.hardware.Camera) -> b
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    int getPreviewFormat() -> c
    java.lang.String getPreviewFormatString() -> d
    android.graphics.Point getCameraResolution(android.hardware.Camera$Parameters,android.graphics.Point) -> a
    android.graphics.Point findBestPreviewSizeValue(java.lang.CharSequence,android.graphics.Point) -> a
    int findBestMotZoomValue(java.lang.CharSequence,int) -> a
    void setFlash(android.hardware.Camera$Parameters) -> a
    void setZoom(android.hardware.Camera$Parameters) -> b
xx.fjnuit.QRCodeDecoder.CameraManager -> xx.fjnuit.QRCodeDecoder.c:
    java.lang.String TAG -> b
    int MIN_FRAME_WIDTH -> c
    int MIN_FRAME_HEIGHT -> d
    int MAX_FRAME_WIDTH -> e
    int MAX_FRAME_HEIGHT -> f
    xx.fjnuit.QRCodeDecoder.CameraManager cameraManager -> g
    int SDK_INT -> a
    android.content.Context context -> h
    xx.fjnuit.QRCodeDecoder.CameraConfigurationManager configManager -> i
    android.hardware.Camera camera -> j
    android.graphics.Rect framingRect -> k
    android.graphics.Rect framingRectInPreview -> l
    boolean initialized -> m
    boolean previewing -> n
    boolean useOneShotPreviewCallback -> o
    xx.fjnuit.QRCodeDecoder.PreviewCallback previewCallback -> p
    xx.fjnuit.QRCodeDecoder.AutoFocusCallback autoFocusCallback -> q
    void init(android.content.Context) -> a
    xx.fjnuit.QRCodeDecoder.CameraManager get() -> a
    void openDriver(android.view.SurfaceHolder) -> a
    void closeDriver() -> b
    void startPreview() -> c
    void stopPreview() -> d
    void requestPreviewFrame(android.os.Handler,int) -> a
    void requestAutoFocus(android.os.Handler,int) -> b
    android.graphics.Rect getFramingRect() -> e
    android.graphics.Rect getFramingRectInPreview() -> f
    xx.fjnuit.QRCodeDecoder.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> a
xx.fjnuit.QRCodeDecoder.CaptureActivityHandler -> xx.fjnuit.QRCodeDecoder.d:
    java.lang.String TAG -> b
    fjfxyy.serialnumber.util.WebServiceHelper webServiceHelper -> a
    fjfxyy.serialnumber.ui.CaptureActivity activity -> c
    xx.fjnuit.QRCodeDecoder.DecodeThread decodeThread -> d
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State state -> e
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
    void restartPreviewAndDecode() -> b
xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State -> xx.fjnuit.QRCodeDecoder.e:
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State PREVIEW -> a
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State SUCCESS -> b
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State DONE -> c
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State[] ENUM$VALUES -> d
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State[] values() -> values
    xx.fjnuit.QRCodeDecoder.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
xx.fjnuit.QRCodeDecoder.DecodeFormatManager -> xx.fjnuit.QRCodeDecoder.f:
    java.util.regex.Pattern COMMA_PATTERN -> e
    java.util.Vector PRODUCT_FORMATS -> a
    java.util.Vector ONE_D_FORMATS -> b
    java.util.Vector QR_CODE_FORMATS -> c
    java.util.Vector DATA_MATRIX_FORMATS -> d
xx.fjnuit.QRCodeDecoder.DecodeHandler -> xx.fjnuit.QRCodeDecoder.g:
    java.lang.String TAG -> a
    fjfxyy.serialnumber.ui.CaptureActivity activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> a
xx.fjnuit.QRCodeDecoder.DecodeThread -> xx.fjnuit.QRCodeDecoder.h:
    fjfxyy.serialnumber.ui.CaptureActivity activity -> a
    java.util.Hashtable hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
xx.fjnuit.QRCodeDecoder.FinishListener -> xx.fjnuit.QRCodeDecoder.i:
    android.app.Activity activityToFinish -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void run() -> run
xx.fjnuit.QRCodeDecoder.FlashlightManager -> xx.fjnuit.QRCodeDecoder.j:
    java.lang.String TAG -> a
    java.lang.Object iHardwareService -> b
    java.lang.reflect.Method setFlashEnabledMethod -> c
    java.lang.Object getHardwareService() -> c
    java.lang.reflect.Method getSetFlashEnabledMethod(java.lang.Object) -> a
    java.lang.Class maybeForName(java.lang.String) -> a
    java.lang.reflect.Method maybeGetMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    void enableFlashlight() -> a
    void disableFlashlight() -> b
    void setFlashlight(boolean) -> a
xx.fjnuit.QRCodeDecoder.InactivityTimer -> xx.fjnuit.QRCodeDecoder.k:
    java.util.concurrent.ScheduledExecutorService inactivityTimer -> a
    android.app.Activity activity -> b
    java.util.concurrent.ScheduledFuture inactivityFuture -> c
    void onActivity() -> a
    void cancel() -> c
    void shutdown() -> b
xx.fjnuit.QRCodeDecoder.InactivityTimer$DaemonThreadFactory -> xx.fjnuit.QRCodeDecoder.l:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
xx.fjnuit.QRCodeDecoder.PlanarYUVLuminanceSource -> xx.fjnuit.QRCodeDecoder.m:
    byte[] yuvData -> a
    int dataWidth -> b
    int dataHeight -> c
    int left -> d
    int top -> e
    byte[] getRow(int,byte[]) -> a
    byte[] getMatrix() -> a
    android.graphics.Bitmap renderCroppedGreyscaleBitmap() -> f
xx.fjnuit.QRCodeDecoder.PreviewCallback -> xx.fjnuit.QRCodeDecoder.n:
    java.lang.String TAG -> a
    xx.fjnuit.QRCodeDecoder.CameraConfigurationManager configManager -> b
    boolean useOneShotPreviewCallback -> c
    android.os.Handler previewHandler -> d
    int previewMessage -> e
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
xx.fjnuit.QRCodeDecoder.ViewfinderResultPointCallback -> xx.fjnuit.QRCodeDecoder.o:
    xx.fjnuit.QRCodeDecoder.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> a
xx.fjnuit.QRCodeDecoder.ViewfinderView -> xx.fjnuit.QRCodeDecoder.ViewfinderView:
    int[] SCANNER_ALPHA -> a
    android.graphics.Paint paint -> b
    android.graphics.Bitmap resultBitmap -> c
    int maskColor -> d
    int resultColor -> e
    int frameColor -> f
    int laserColor -> g
    int resultPointColor -> h
    int scannerAlpha -> i
    java.util.Collection possibleResultPoints -> j
    java.util.Collection lastPossibleResultPoints -> k
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> a
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> a
